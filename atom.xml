<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>不靠谱的程序猿</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-05-28T09:14:36.809Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Sheffi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>iOS内购相关封装</title>
    <link href="http://yoursite.com/2019/05/28/iOS%E5%86%85%E8%B4%AD%E7%9B%B8%E5%85%B3%E5%B0%81%E8%A3%85/"/>
    <id>http://yoursite.com/2019/05/28/iOS内购相关封装/</id>
    <published>2019-05-28T09:10:23.000Z</published>
    <updated>2019-05-28T09:14:36.809Z</updated>
    
    <content type="html"><![CDATA[<h3 id="将内购相关d功能封装成单例类，直接上代码"><a href="#将内购相关d功能封装成单例类，直接上代码" class="headerlink" title="将内购相关d功能封装成单例类，直接上代码"></a>将内购相关d功能封装成单例类，直接上代码</h3><p>.h代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line">#import &lt;Foundation/Foundation.h&gt;</span><br><span class="line">#import &lt;StoreKit/StoreKit.h&gt;</span><br><span class="line"></span><br><span class="line">@protocol YYAInAppPurchaseToolDelegate &lt;NSObject&gt;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">*  TODO: System error.</span><br><span class="line">*/</span><br><span class="line">- (void)IAPToolSysWrong;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">*  已刷新可购买商品</span><br><span class="line">*</span><br><span class="line">*  @param products 商品数组</span><br><span class="line">*/</span><br><span class="line">- (void)IAPToolGotProducts:(NSMutableArray *)products;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">*  购买成功</span><br><span class="line">*</span><br><span class="line">*  @param productID 购买成功的商品ID</span><br><span class="line">*/</span><br><span class="line">- (void)IAPToolBoughtProductSuccessedWithProductID:(NSString *)productID</span><br><span class="line">andInfo:(NSDictionary *)infoDic;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">*  取消购买</span><br><span class="line">*</span><br><span class="line">*  @param productID 商品ID</span><br><span class="line">*/</span><br><span class="line">- (void)IAPToolCanceldWithProductID:(NSString *)productID;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">*  购买成功，开始验证购买</span><br><span class="line">*</span><br><span class="line">*  @param productID 商品ID</span><br><span class="line">*/</span><br><span class="line">- (void)IAPToolBeginCheckingdWithProductID:(NSString *)productID;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">*  重复验证</span><br><span class="line">*</span><br><span class="line">*  @param productID 商品ID</span><br><span class="line">*/</span><br><span class="line">- (void)IAPToolCheckRedundantWithProductID:(NSString *)productID;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">*  验证失败</span><br><span class="line">*</span><br><span class="line">*  @param productID 商品ID</span><br><span class="line">*/</span><br><span class="line">- (void)IAPToolCheckFailedWithProductID:(NSString *)productID</span><br><span class="line">andInfo:(NSData *)infoData;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">*  恢复了已购买的商品（永久性商品）</span><br><span class="line">*</span><br><span class="line">*  @param productID 商品ID</span><br><span class="line">*/</span><br><span class="line">- (void)IAPToolRestoredProductID:(NSString *)productID;</span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">NS_ASSUME_NONNULL_BEGIN</span><br><span class="line"></span><br><span class="line">@interface YYAInAppPurchaseTool : NSObject</span><br><span class="line"></span><br><span class="line">typedef void(^BoolBlock)(BOOL successed,BOOL result);</span><br><span class="line"></span><br><span class="line">typedef void(^DicBlock)(BOOL successed,NSDictionary *result);</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">*  代理</span><br><span class="line">*/</span><br><span class="line">@property(nonatomic,weak) id &lt;YYAInAppPurchaseToolDelegate&gt; delegate;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">*  购买完后是否在iOS端向服务器验证一次,默认为YES</span><br><span class="line">*/</span><br><span class="line">@property(nonatomic)BOOL CheckAfterPay;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">*  单例</span><br><span class="line">*</span><br><span class="line">*  @return YQInAppPurchaseTool</span><br><span class="line">*/</span><br><span class="line">+(YYAInAppPurchaseTool *)defaultTool;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">*  询问苹果的服务器能够销售哪些商品</span><br><span class="line">*</span><br><span class="line">*  @param products 商品ID的数组</span><br><span class="line">*/</span><br><span class="line">- (void)requestProductsWithProductArray:(NSArray *)products;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">*  用户决定购买商品</span><br><span class="line">*</span><br><span class="line">*  @param productID 商品ID</span><br><span class="line">*/</span><br><span class="line">- (void)buyProduct:(NSString *)productID;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">*  恢复商品（仅限永久有效商品）</span><br><span class="line">*/</span><br><span class="line">- (void)restorePurchase;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">NS_ASSUME_NONNULL_END</span><br></pre></td></tr></table></figure></p><p>.m代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;YYAInAppPurchaseTool.h&quot;</span><br><span class="line"></span><br><span class="line">#ifdef DEBUG</span><br><span class="line">#define checkURL @&quot;https://sandbox.itunes.apple.com/verifyReceipt&quot;</span><br><span class="line">#else</span><br><span class="line">#define checkURL @&quot;https://buy.itunes.apple.com/verifyReceipt&quot;</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line">@interface YYAInAppPurchaseTool ()&lt;SKPaymentTransactionObserver,SKProductsRequestDelegate&gt;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">*  商品字典</span><br><span class="line">*/</span><br><span class="line">@property(nonatomic,strong)NSMutableDictionary *productDict;</span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">@implementation YYAInAppPurchaseTool</span><br><span class="line"></span><br><span class="line">static YYAInAppPurchaseTool *storeTool;</span><br><span class="line"></span><br><span class="line">/// 单例</span><br><span class="line">+ (YYAInAppPurchaseTool *)defaultTool &#123;</span><br><span class="line">if(!storeTool)&#123;</span><br><span class="line">storeTool = [YYAInAppPurchaseTool new];</span><br><span class="line">[storeTool setup];</span><br><span class="line">&#125;</span><br><span class="line">return storeTool;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#pragma mark  初始化</span><br><span class="line"></span><br><span class="line">- (void)setup &#123;</span><br><span class="line"></span><br><span class="line">self.CheckAfterPay = YES;</span><br><span class="line"></span><br><span class="line">// 设置购买队列的监听器</span><br><span class="line">[[SKPaymentQueue defaultQueue] addTransactionObserver:self];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/// 询问苹果的服务器能够销售哪些商品</span><br><span class="line">- (void)requestProductsWithProductArray:(NSArray *)products &#123;</span><br><span class="line">NSLog(@&quot;开始请求可销售商品&quot;);</span><br><span class="line"></span><br><span class="line">// 能够销售的商品</span><br><span class="line">NSSet *set = [[NSSet alloc] initWithArray:products];</span><br><span class="line"></span><br><span class="line">// &quot;异步&quot;询问苹果能否销售</span><br><span class="line">SKProductsRequest *request = [[SKProductsRequest alloc] initWithProductIdentifiers:set];</span><br><span class="line"></span><br><span class="line">request.delegate = self;</span><br><span class="line"></span><br><span class="line">// 启动请求</span><br><span class="line">[request start];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#pragma mark 获取询问结果，成功采取操作把商品加入可售商品字典里</span><br><span class="line">/**</span><br><span class="line">*  获取询问结果，成功采取操作把商品加入可售商品字典里</span><br><span class="line">*</span><br><span class="line">*  @param request  请求内容</span><br><span class="line">*  @param response 返回的结果</span><br><span class="line">*/</span><br><span class="line">- (void)productsRequest:(SKProductsRequest *)request didReceiveResponse:(SKProductsResponse *)response &#123;</span><br><span class="line">if (self.productDict == nil) &#123;</span><br><span class="line">self.productDict = [NSMutableDictionary dictionaryWithCapacity:response.products.count];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">NSMutableArray *productArray = [NSMutableArray array];</span><br><span class="line"></span><br><span class="line">for (SKProduct *product in response.products) &#123;</span><br><span class="line">//NSLog(@&quot;%@&quot;, product.productIdentifier);</span><br><span class="line"></span><br><span class="line">// 填充商品字典</span><br><span class="line">[self.productDict setObject:product forKey:product.productIdentifier];</span><br><span class="line"></span><br><span class="line">[productArray addObject:product];</span><br><span class="line">&#125;</span><br><span class="line">//通知代理</span><br><span class="line">[self.delegate IAPToolGotProducts:productArray];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#pragma mark - 用户决定购买商品</span><br><span class="line">/**</span><br><span class="line">*  用户决定购买商品</span><br><span class="line">*</span><br><span class="line">*  @param productID 商品ID</span><br><span class="line">*/</span><br><span class="line">- (void)buyProduct:(NSString *)productID &#123;</span><br><span class="line">SKProduct *product = self.productDict[productID];</span><br><span class="line"></span><br><span class="line">// 要购买产品(店员给用户开了个小票)</span><br><span class="line">SKPayment *payment = [SKPayment paymentWithProduct:product];</span><br><span class="line"></span><br><span class="line">// 去收银台排队，准备购买(异步网络)</span><br><span class="line">[[SKPaymentQueue defaultQueue] addPayment:payment];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#pragma mark - SKPaymentTransaction Observer</span><br><span class="line">#pragma mark 购买队列状态变化,,判断购买状态是否成功</span><br><span class="line">/**</span><br><span class="line">*  监测购买队列的变化</span><br><span class="line">*</span><br><span class="line">*  @param queue        队列</span><br><span class="line">*  @param transactions 交易</span><br><span class="line">*/</span><br><span class="line">- (void)paymentQueue:(SKPaymentQueue *)queue updatedTransactions:(NSArray *)transactions &#123;</span><br><span class="line">// 处理结果</span><br><span class="line">for (SKPaymentTransaction *transaction in transactions) &#123;</span><br><span class="line">NSLog(@&quot;队列状态变化 %@&quot;, transaction);</span><br><span class="line">// 如果小票状态是购买完成</span><br><span class="line">if (SKPaymentTransactionStatePurchased == transaction.transactionState) &#123;</span><br><span class="line">//NSLog(@&quot;购买完成 %@&quot;, transaction.payment.productIdentifier);</span><br><span class="line"></span><br><span class="line">if(self.CheckAfterPay)&#123;</span><br><span class="line">//需要向苹果服务器验证一下</span><br><span class="line">//通知代理</span><br><span class="line">[self.delegate IAPToolBeginCheckingdWithProductID:transaction.payment.productIdentifier];</span><br><span class="line">// 验证购买凭据</span><br><span class="line">[self verifyPruchaseWithID:transaction.payment.productIdentifier];</span><br><span class="line">&#125;else&#123;</span><br><span class="line">//不需要向苹果服务器验证</span><br><span class="line">//通知代理</span><br><span class="line">[self.delegate IAPToolBoughtProductSuccessedWithProductID:transaction.payment.productIdentifier</span><br><span class="line">andInfo:nil];</span><br><span class="line">&#125;</span><br><span class="line">// 将交易从交易队列中删除</span><br><span class="line">[[SKPaymentQueue defaultQueue] finishTransaction:transaction];</span><br><span class="line"></span><br><span class="line">&#125; else if (SKPaymentTransactionStateRestored == transaction.transactionState) &#123;</span><br><span class="line">//NSLog(@&quot;恢复成功 :%@&quot;, transaction.payment.productIdentifier);</span><br><span class="line"></span><br><span class="line">// 通知代理</span><br><span class="line">[self.delegate IAPToolRestoredProductID:transaction.payment.productIdentifier];</span><br><span class="line"></span><br><span class="line">// 将交易从交易队列中删除</span><br><span class="line">[[SKPaymentQueue defaultQueue] finishTransaction:transaction];</span><br><span class="line">&#125; else if (SKPaymentTransactionStateFailed == transaction.transactionState)&#123;</span><br><span class="line"></span><br><span class="line">// 将交易从交易队列中删除</span><br><span class="line">[[SKPaymentQueue defaultQueue] finishTransaction:transaction];</span><br><span class="line">//NSLog(@&quot;交易失败&quot;);</span><br><span class="line">[self.delegate IAPToolCanceldWithProductID:transaction.payment.productIdentifier];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;else if(SKPaymentTransactionStatePurchasing == transaction.transactionState)&#123;</span><br><span class="line">NSLog(@&quot;正在购买&quot;);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">NSLog(@&quot;state:%ld&quot;,(long)transaction.transactionState);</span><br><span class="line">NSLog(@&quot;已经购买&quot;);</span><br><span class="line">// 将交易从交易队列中删除</span><br><span class="line">[[SKPaymentQueue defaultQueue] finishTransaction:transaction];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#pragma mark - 恢复商品</span><br><span class="line">/**</span><br><span class="line">*  恢复商品</span><br><span class="line">*/</span><br><span class="line">- (void)restorePurchase &#123;</span><br><span class="line">// 恢复已经完成的所有交易.（仅限永久有效商品）</span><br><span class="line">[[SKPaymentQueue defaultQueue] restoreCompletedTransactions];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#pragma mark 验证购买凭据</span><br><span class="line">/**</span><br><span class="line">*  验证购买凭据</span><br><span class="line">*</span><br><span class="line">*  @param ProductID 商品ID</span><br><span class="line">*/</span><br><span class="line">- (void)verifyPruchaseWithID:(NSString *)ProductID &#123;</span><br><span class="line">// 验证凭据，获取到苹果返回的交易凭据</span><br><span class="line">// appStoreReceiptURL iOS7.0增加的，购买交易完成后，会将凭据存放在该地址</span><br><span class="line">NSURL *receiptURL = [[NSBundle mainBundle] appStoreReceiptURL];</span><br><span class="line">// 从沙盒中获取到购买凭据</span><br><span class="line">NSData *receiptData = [NSData dataWithContentsOfURL:receiptURL];</span><br><span class="line"></span><br><span class="line">// 发送网络POST请求，对购买凭据进行验证</span><br><span class="line">//In the test environment, use https://sandbox.itunes.apple.com/verifyReceipt</span><br><span class="line">//In the real environment, use https://buy.itunes.apple.com/verifyReceipt</span><br><span class="line">// Create a POST request with the receipt data.</span><br><span class="line">NSURL *url = [NSURL URLWithString:checkURL];</span><br><span class="line"></span><br><span class="line">NSLog(@&quot;checkURL:%@&quot;,checkURL);</span><br><span class="line"></span><br><span class="line">// 国内访问苹果服务器比较慢，timeoutInterval需要长一点</span><br><span class="line">NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:url cachePolicy:NSURLRequestUseProtocolCachePolicy timeoutInterval:20.0f];</span><br><span class="line"></span><br><span class="line">request.HTTPMethod = @&quot;POST&quot;;</span><br><span class="line"></span><br><span class="line">// 在网络中传输数据，大多情况下是传输的字符串而不是二进制数据</span><br><span class="line">// 传输的是BASE64编码的字符串</span><br><span class="line">/**</span><br><span class="line">BASE64 常用的编码方案，通常用于数据传输，以及加密算法的基础算法，传输过程中能够保证数据传输的稳定性</span><br><span class="line">BASE64是可以编码和解码的</span><br><span class="line">*/</span><br><span class="line">NSString *encodeStr = [receiptData base64EncodedStringWithOptions:NSDataBase64EncodingEndLineWithLineFeed];</span><br><span class="line"></span><br><span class="line">NSString *payload = [NSString stringWithFormat:@&quot;&#123;\&quot;receipt-data\&quot; : \&quot;%@\&quot;&#125;&quot;, encodeStr];</span><br><span class="line">NSData *payloadData = [payload dataUsingEncoding:NSUTF8StringEncoding];</span><br><span class="line"></span><br><span class="line">request.HTTPBody = payloadData;</span><br><span class="line"></span><br><span class="line">// 提交验证请求，并获得官方的验证JSON结果</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">NSURLSession *session = [NSURLSession sharedSession];</span><br><span class="line"></span><br><span class="line">// 4.根据会话对象，创建一个Task任务</span><br><span class="line"></span><br><span class="line">NSURLSessionDataTask *sessionDataTask = [session dataTaskWithRequest:request completionHandler:^(NSData * _Nullable data, NSURLResponse * _Nullable response, NSError * _Nullable error) &#123;</span><br><span class="line"></span><br><span class="line">NSLog(@&quot;从服务器获取到数据&quot;);</span><br><span class="line"></span><br><span class="line">NSDictionary *dict = [NSJSONSerialization JSONObjectWithData:data options:(NSJSONReadingMutableLeaves) error:nil];</span><br><span class="line"></span><br><span class="line">if (dict != nil) &#123;</span><br><span class="line">// 验证成功,通知代理</span><br><span class="line">// bundle_id&amp;application_version&amp;product_id&amp;transaction_id</span><br><span class="line">[self.delegate IAPToolBoughtProductSuccessedWithProductID:ProductID</span><br><span class="line">andInfo:dict];</span><br><span class="line">&#125; else &#123;</span><br><span class="line"></span><br><span class="line">//验证失败,通知代理</span><br><span class="line">[self.delegate IAPToolCheckFailedWithProductID:ProductID</span><br><span class="line">andInfo:data];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;];</span><br><span class="line"></span><br><span class="line">[sessionDataTask resume];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;将内购相关d功能封装成单例类，直接上代码&quot;&gt;&lt;a href=&quot;#将内购相关d功能封装成单例类，直接上代码&quot; class=&quot;headerlink&quot; title=&quot;将内购相关d功能封装成单例类，直接上代码&quot;&gt;&lt;/a&gt;将内购相关d功能封装成单例类，直接上代码&lt;/h3&gt;&lt;
      
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
      <category term="内购" scheme="http://yoursite.com/tags/%E5%86%85%E8%B4%AD/"/>
    
  </entry>
  
  <entry>
    <title>React Native开发环境的搭建（Mac）</title>
    <link href="http://yoursite.com/2019/05/24/React-Native%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA%EF%BC%88Mac%EF%BC%89/"/>
    <id>http://yoursite.com/2019/05/24/React-Native开发环境的搭建（Mac）/</id>
    <published>2019-05-24T06:38:30.000Z</published>
    <updated>2019-05-27T08:16:51.569Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><p>1.先安装Homebrew（若已安装，可跳过）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/</span><br></pre></td></tr></table></figure></p><p>2.安装node和webpack</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew install node</span><br><span class="line">brew install webpack</span><br></pre></td></tr></table></figure><p>测试node和webpack是否安装成功，可用如下命令进行检测。若本地安装，则会显示对应版本号。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">webpack -v</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>3.设置国内镜像（常年开vpn的可以忽略）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set disturl https://npm.taobao.org/dist --global</span><br></pre></td></tr></table></figure></p><p>这里出错了，按提示走就可以，复制sudo那一行更改目录权限，再设置国内镜像。</p><p>4.安装RN：直接输入<code>npm install -g react-native-cli</code>。会因为权限不够而报错：npm WARN checkPermissions Missing write access to /usr/local/lib/node_modules。所以我们直接输入下面两句话<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R $(whoami) /usr/local/*</span><br><span class="line">npm install -g yarn react-native-cli</span><br></pre></td></tr></table></figure></p><p>测试是否安装成功：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">react-native -v</span><br></pre></td></tr></table></figure></p><h2 id="创建RN项目到本地"><a href="#创建RN项目到本地" class="headerlink" title="创建RN项目到本地"></a>创建RN项目到本地</h2><p>1.创建RN项目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">react-native init AwesomeProject</span><br></pre></td></tr></table></figure></p><p>2.编译并运行 React Native 应用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd AwesomeProject</span><br><span class="line">react-native run-ios</span><br></pre></td></tr></table></figure></p><img src="/2019/05/24/React-Native开发环境的搭建（Mac）/screenShots.png" title="运行结果"><blockquote><p>提示：如果 run-ios 无法正常运行，请使用 Xcode 运行来查看具体错误（run-ios 的报错没有任何具体信息）。第一次运行会比较慢，需要耐心等待一下</p></blockquote><p>3.修改项目<br>现在你已经成功运行了项目，我们可以开始尝试动手改一改了：</p><ul><li>使用你喜欢的编辑器打开App.js并随便改上几行。 </li><li>在 iOS 模拟器中按下<em>⌘-R</em>就可以刷新 APP并看到你的最新修改！（如果没有反应，请检查模拟器的 Hardware 菜单中，connect hardware keyboard    选项是否选中开启）</li></ul><h2 id="大功告成"><a href="#大功告成" class="headerlink" title="大功告成"></a>大功告成</h2><img src="/2019/05/24/React-Native开发环境的搭建（Mac）/皮卡丘.gif" title="皮卡皮卡丘">]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装依赖&quot;&gt;&lt;a href=&quot;#安装依赖&quot; class=&quot;headerlink&quot; title=&quot;安装依赖&quot;&gt;&lt;/a&gt;安装依赖&lt;/h2&gt;&lt;p&gt;1.先安装Homebrew（若已安装，可跳过）&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/usr/bin/ruby -e &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;2.安装node和webpack&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;brew install node&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;brew install webpack&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;测试node和webpack是否安装成功，可用如下命令进行检测。若本地安装，则会显示对应版本号。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;node -v&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;webpack -v&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="React Native" scheme="http://yoursite.com/categories/React-Native/"/>
    
    
      <category term="React Native" scheme="http://yoursite.com/tags/React-Native/"/>
    
  </entry>
  
  <entry>
    <title>iOS截图那些事</title>
    <link href="http://yoursite.com/2018/09/06/iOS%E6%88%AA%E5%9B%BE%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    <id>http://yoursite.com/2018/09/06/iOS截图那些事/</id>
    <published>2018-09-06T02:45:04.000Z</published>
    <updated>2018-09-07T06:14:26.925Z</updated>
    
    <content type="html"><![CDATA[<h2 id="普通view截图"><a href="#普通view截图" class="headerlink" title="普通view截图"></a>普通view截图</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">+ (UIImage *)gjj_viewScreenShot:(UIView *)view &#123;</span><br><span class="line">UIGraphicsBeginImageContextWithOptions(CGSizeMake(view.frame.size.width, view.frame.size.height ), NO, 0.0);</span><br><span class="line">[view.layer renderInContext:UIGraphicsGetCurrentContext()];</span><br><span class="line">/// 返回一个基于当前图形上下文的图片</span><br><span class="line">UIImage *viewImage = UIGraphicsGetImageFromCurrentImageContext();</span><br><span class="line"></span><br><span class="line">/// 移除栈顶的基于当前位图的图形上下文</span><br><span class="line">UIGraphicsEndImageContext();</span><br><span class="line">return viewImage;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="tableView、collectionView等scrollView生成长截图"><a href="#tableView、collectionView等scrollView生成长截图" class="headerlink" title="tableView、collectionView等scrollView生成长截图"></a>tableView、collectionView等scrollView生成长截图</h2><p>实现步骤</p><ol><li>保存scrollView截取前的偏移量及Frame</li><li>计算出你要截取的长图的高度及宽度，即scrollView的contentSize，将scrollView.frame设成scrollView.contentSize</li><li>渲染出scrollView整体（上下文），截取当前scrollView生成Image</li><li>恢复scrollView的偏移量及Frame</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">+ (UIImage *)gjj_scrollViewScreenShot:(UIScrollView *)scrollView &#123;</span><br><span class="line">UIImage *image = nil;</span><br><span class="line"></span><br><span class="line">UIGraphicsBeginImageContextWithOptions(scrollView.contentSize, YES, [UIScreen mainScreen].scale);</span><br><span class="line">CGPoint saveContentOffset = scrollView.contentOffset;</span><br><span class="line">CGRect savedFrame = scrollView.frame;</span><br><span class="line">scrollView.contentOffset = CGPointZero;</span><br><span class="line">scrollView.frame = CGRectMake(0, 0, scrollView.contentSize.width, scrollView.contentSize.height);</span><br><span class="line">[scrollView.layer renderInContext:UIGraphicsGetCurrentContext()];</span><br><span class="line">scrollView.layer.contents = nil;</span><br><span class="line">image = UIGraphicsGetImageFromCurrentImageContext();</span><br><span class="line">scrollView.contentOffset = saveContentOffset;</span><br><span class="line">scrollView.frame = savedFrame;</span><br><span class="line">UIGraphicsEndImageContext();</span><br><span class="line">return image;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="webView生成长截图"><a href="#webView生成长截图" class="headerlink" title="webView生成长截图"></a>webView生成长截图</h2><p>webView和scrollView的截图大同小异</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">+ (UIImage *)gjj_webViewScreenShot:(UIWebView *)webView &#123;</span><br><span class="line">UIImage *image = nil;</span><br><span class="line"></span><br><span class="line">UIGraphicsBeginImageContextWithOptions(webView.scrollView.contentSize, YES, [UIScreen mainScreen].scale);</span><br><span class="line">CGPoint saveContentOffset = webView.scrollView.contentOffset;</span><br><span class="line">CGRect savedFrame = webView.frame;</span><br><span class="line">webView.scrollView.contentOffset = CGPointZero;</span><br><span class="line">webView.frame = CGRectMake(0, 0, webView.scrollView.contentSize.width, webView.scrollView.contentSize.height);</span><br><span class="line">[webView.layer renderInContext:UIGraphicsGetCurrentContext()];</span><br><span class="line">webView.layer.contents = nil;</span><br><span class="line">image = UIGraphicsGetImageFromCurrentImageContext();</span><br><span class="line">webView.scrollView.contentOffset = saveContentOffset;</span><br><span class="line">webView.frame = savedFrame;</span><br><span class="line">UIGraphicsEndImageContext();</span><br><span class="line">return image;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="图片拼接"><a href="#图片拼接" class="headerlink" title="图片拼接"></a>图片拼接</h2><p>很多需求是截图附带二维码等进行分享。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">+ (UIImage *)gjj_addHeadImage:(UIImage *)headImage footImage:(UIImage *)footImage toMasterImage:(UIImage *)masterImage &#123;</span><br><span class="line">CGSize size;</span><br><span class="line">size.width = masterImage.size.width;</span><br><span class="line"></span><br><span class="line">CGFloat headProportion = !headImage?0:(headImage.size.width / headImage.size.height);</span><br><span class="line">CGFloat footProportion = !footImage?0:(footImage.size.width / footImage.size.height);</span><br><span class="line"></span><br><span class="line">CGFloat headHeight = !headImage? 0:masterImage.size.width/headProportion;</span><br><span class="line">CGFloat footHeight = !footImage? 0:footImage.size.width/footProportion;</span><br><span class="line"></span><br><span class="line">size.height = masterImage.size.height + headHeight + footHeight;</span><br><span class="line"></span><br><span class="line">UIGraphicsBeginImageContextWithOptions(size, YES, 0.0);</span><br><span class="line"></span><br><span class="line">if (headImage) &#123;</span><br><span class="line">[headImage drawInRect:CGRectMake(0, 0, masterImage.size.width, headHeight)];</span><br><span class="line">&#125;</span><br><span class="line">[masterImage drawInRect:CGRectMake(0, headHeight, masterImage.size.width, masterImage.size.height)];</span><br><span class="line">if (footImage) &#123;</span><br><span class="line">[footImage drawInRect:CGRectMake(0, masterImage.size.height + headHeight, masterImage.size.width, footHeight)];</span><br><span class="line">&#125;</span><br><span class="line">UIImage *resultImage = UIGraphicsGetImageFromCurrentImageContext(); UIGraphicsEndImageContext();</span><br><span class="line">return resultImage;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="添加水印"><a href="#添加水印" class="headerlink" title="添加水印"></a>添加水印</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">+ (UIImage *)gjj_addWaterImage:(UIImage *)waterImage toMasterImage:(UIImage *)masterImage waterImageRect:(CGRect)rect &#123;</span><br><span class="line">UIGraphicsBeginImageContextWithOptions(masterImage.size, NO, 0);</span><br><span class="line">[masterImage drawInRect:CGRectMake(0, 0, masterImage.size.width, masterImage.size.height)];</span><br><span class="line">/// 绘制水印图片到当前上下文</span><br><span class="line">[waterImage drawInRect:rect];</span><br><span class="line"></span><br><span class="line">UIImage * newImage = UIGraphicsGetImageFromCurrentImageContext();</span><br><span class="line">UIGraphicsEndImageContext();</span><br><span class="line">return newImage;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;普通view截图&quot;&gt;&lt;a href=&quot;#普通view截图&quot; class=&quot;headerlink&quot; title=&quot;普通view截图&quot;&gt;&lt;/a&gt;普通view截图&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;+ (UIImage *)gjj_viewScreenShot:(UIView *)view &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UIGraphicsBeginImageContextWithOptions(CGSizeMake(view.frame.size.width, view.frame.size.height ), NO, 0.0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[view.layer renderInContext:UIGraphicsGetCurrentContext()];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// 返回一个基于当前图形上下文的图片&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UIImage *viewImage = UIGraphicsGetImageFromCurrentImageContext();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// 移除栈顶的基于当前位图的图形上下文&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UIGraphicsEndImageContext();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;return viewImage;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="C" scheme="http://yoursite.com/categories/C/"/>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
      <category term="截图" scheme="http://yoursite.com/tags/%E6%88%AA%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>【C实现】给出一个字符串，要求将其按照单词顺序进行反转 </title>
    <link href="http://yoursite.com/2018/08/21/%E3%80%90C%E5%AE%9E%E7%8E%B0%E3%80%91%E7%BB%99%E5%87%BA%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%8C%E8%A6%81%E6%B1%82%E5%B0%86%E5%85%B6%E6%8C%89%E7%85%A7%E5%8D%95%E8%AF%8D%E9%A1%BA%E5%BA%8F%E8%BF%9B%E8%A1%8C%E5%8F%8D%E8%BD%AC/"/>
    <id>http://yoursite.com/2018/08/21/【C实现】给出一个字符串，要求将其按照单词顺序进行反转/</id>
    <published>2018-08-21T02:35:59.000Z</published>
    <updated>2018-09-07T06:13:51.251Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目：给出一个字符串，要求将其按照单词顺序进行反转，比如如果是”the-sky-is-blue”-那么反转之后的结果就是”blue-is-sky-the”。"><a href="#题目：给出一个字符串，要求将其按照单词顺序进行反转，比如如果是”the-sky-is-blue”-那么反转之后的结果就是”blue-is-sky-the”。" class="headerlink" title="题目：给出一个字符串，要求将其按照单词顺序进行反转，比如如果是”the sky is blue”,那么反转之后的结果就是”blue is sky the”。"></a>题目：给出一个字符串，要求将其按照单词顺序进行反转，比如如果是”the sky is blue”,那么反转之后的结果就是”blue is sky the”。</h2><p>问题分析：</p><ul><li>每个单词长度不一致</li><li>空格需要特殊处理</li></ul><a id="more"></a><p>使用C语言实现：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">void swap (char chars[], int p, int q);</span><br><span class="line">void reverse (char chars[], int start, int end);</span><br><span class="line">void reverseWords(char strings[]);</span><br><span class="line"></span><br><span class="line">int main(int argc, const char * argv[]) &#123;</span><br><span class="line">@autoreleasepool &#123;</span><br><span class="line">char string[] = &quot;the sky is blue&quot;;</span><br><span class="line">reverseWords(string);</span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void swap (char chars[], int p, int q) &#123;</span><br><span class="line">char temp = chars[p];</span><br><span class="line">chars[p] = chars[q];</span><br><span class="line">chars[q] = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void reverse (char chars[], int start, int end) &#123;</span><br><span class="line">NSLog(@&quot;%s&quot;,chars);</span><br><span class="line">int s = start;</span><br><span class="line">int e = end;</span><br><span class="line"></span><br><span class="line">while (s &lt; e) &#123;</span><br><span class="line">swap(chars, s, e);</span><br><span class="line">s += 1;</span><br><span class="line">e -= 1;</span><br><span class="line">&#125;</span><br><span class="line">NSLog(@&quot;%s&quot;,chars);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void reverseWords(char strings[]) &#123;</span><br><span class="line">if ((int)strlen(strings) == 0) &#123;</span><br><span class="line">return;</span><br><span class="line">&#125;</span><br><span class="line">int start = 0, len = (int)strlen(strings);</span><br><span class="line">reverse(strings, 0, len - 1);</span><br><span class="line">for (int i = 0 ; i &lt; len; i++) &#123;</span><br><span class="line">if ((i == len - 1) || (strings[i + 1] == &apos; &apos;)) &#123;</span><br><span class="line">reverse(strings, start, i);</span><br><span class="line">start = i + 2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">NSLog(@&quot;%s&quot;,strings);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>控制台打印：<code>2018-08-14 16:04:22.815076+0800 算法[6268:668783] blue is sky the</code></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目：给出一个字符串，要求将其按照单词顺序进行反转，比如如果是”the-sky-is-blue”-那么反转之后的结果就是”blue-is-sky-the”。&quot;&gt;&lt;a href=&quot;#题目：给出一个字符串，要求将其按照单词顺序进行反转，比如如果是”the-sky-is-blue”-那么反转之后的结果就是”blue-is-sky-the”。&quot; class=&quot;headerlink&quot; title=&quot;题目：给出一个字符串，要求将其按照单词顺序进行反转，比如如果是”the sky is blue”,那么反转之后的结果就是”blue is sky the”。&quot;&gt;&lt;/a&gt;题目：给出一个字符串，要求将其按照单词顺序进行反转，比如如果是”the sky is blue”,那么反转之后的结果就是”blue is sky the”。&lt;/h2&gt;&lt;p&gt;问题分析：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每个单词长度不一致&lt;/li&gt;
&lt;li&gt;空格需要特殊处理&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="C" scheme="http://yoursite.com/categories/C/"/>
    
    
      <category term="C语言" scheme="http://yoursite.com/tags/C%E8%AF%AD%E8%A8%80/"/>
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>QLPreviewController</title>
    <link href="http://yoursite.com/2018/05/14/hello-world/"/>
    <id>http://yoursite.com/2018/05/14/hello-world/</id>
    <published>2018-05-14T13:53:54.000Z</published>
    <updated>2018-09-07T06:14:07.776Z</updated>
    
    <content type="html"><![CDATA[<p>QLPreviewController在iOS中用于方便预览文件，它支持的文件有：</p><ul><li>iWork文档</li><li>微软Office97以上版本的文档</li><li>RTF文档</li><li>PDF文件</li><li>图片文件</li><li><p>文本文件和CSV文件</p><p>使用的时候首先要引用<code>#import &lt;QuickLook/QuickLook.h&gt;</code>。</p><a id="more"></a><p>初始化：</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">_qlPreviewController = [[ QLPreviewController alloc]init];</span><br><span class="line"> _qlPreviewController.dataSource = self;</span><br><span class="line"> _qlPreviewController.delegate = self;</span><br><span class="line"> </span><br><span class="line"> [self presentViewController:_qlPreviewController animated:YES completion:nil];</span><br></pre></td></tr></table></figure><p> QLPreviewController类似于Tableview的使用方法，也是首先遵循代理和数据源代理。然后实现代理方法，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-(NSInteger)numberOfPreviewItemsInPreviewController:(QLPreviewController *)controller&#123;</span><br><span class="line">    return 2;</span><br><span class="line">&#125;</span><br><span class="line">-(id&lt;QLPreviewItem&gt;)previewController:(QLPreviewController *)controller previewItemAtIndex:(NSInteger)index&#123;</span><br><span class="line">    NSString *path = [[NSBundle mainBundle] pathForResource:@&quot;aa&quot; ofType:@&quot;doc&quot;];</span><br><span class="line">    NSURL *myDoucment = [NSURL fileURLWithPath:path];</span><br><span class="line">    return myDoucment;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;QLPreviewController在iOS中用于方便预览文件，它支持的文件有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;iWork文档&lt;/li&gt;
&lt;li&gt;微软Office97以上版本的文档&lt;/li&gt;
&lt;li&gt;RTF文档&lt;/li&gt;
&lt;li&gt;PDF文件&lt;/li&gt;
&lt;li&gt;图片文件&lt;/li&gt;
&lt;li&gt;&lt;p&gt;文本文件和CSV文件&lt;/p&gt;
&lt;p&gt;使用的时候首先要引用&lt;code&gt;#import &amp;lt;QuickLook/QuickLook.h&amp;gt;&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="Object-C" scheme="http://yoursite.com/categories/Object-C/"/>
    
    
  </entry>
  
</feed>
