<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>不靠谱的程序猿</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-09-18T06:36:00.447Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Sheffi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>macOS上搭建Flutter开发环境</title>
    <link href="http://yoursite.com/2019/09/18/macOS%E4%B8%8A%E6%90%AD%E5%BB%BAFlutter%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    <id>http://yoursite.com/2019/09/18/macOS上搭建Flutter开发环境/</id>
    <published>2019-09-18T06:08:36.000Z</published>
    <updated>2019-09-18T06:36:00.447Z</updated>
    
    <content type="html"><![CDATA[<h2 id="系统要求"><a href="#系统要求" class="headerlink" title="系统要求"></a>系统要求</h2><p>要安装并运行Flutter，您的开发环境必须满足以下最低要求:</p><ul><li>操作系统: macOS (64-bit)</li><li>磁盘空间: 700 MB (不包括Xcode或Android Studio的磁盘空间）.</li><li>工具: Flutter 依赖下面这些命令行工具.</li><li>bash、mkdir、rm、git、curl、unzip、which<a id="more"></a></li></ul><h2 id="获取Flutter-SDK"><a href="#获取Flutter-SDK" class="headerlink" title="获取Flutter SDK"></a>获取Flutter SDK</h2><ol><li><p>去flutter官网下载其最新可用的安装包，官网地址：<a href="https://flutter.io/sdk-archive/#macos" target="_blank" rel="noopener">https://flutter.io/sdk-archive/#macos</a>。<br>注意，Flutter的渠道版本会不停变动，请以Flutter官网为准。另外，在中国大陆地区，要想正常获取安装包列表或下载安装包，可能需要翻墙，可以去Flutter github项目下去下载安装包，地址：<a href="https://github.com/flutter/flutter/releases" target="_blank" rel="noopener">https://github.com/flutter/flutter/releases</a> 。</p></li><li><p>解压安装包到你想安装的目录<br>直接解压放到你想安装的目录就可以。或者使用命令行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~/development</span><br><span class="line">unzip ~/Downloads/flutter_macos_v0.5.1-beta.zip</span><br></pre></td></tr></table></figure></li><li><p>配置环境变量</p></li></ol><ul><li><p>打开终端工具，使用vim进行配置环境变量，命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bash_profile</span><br></pre></td></tr></table></figure></li><li><p>然后在终端添加以下三行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export PUB_HOSTED_URL=https://pub.flutter-io.cn # 国内用户需要设置</span><br><span class="line">export FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn # 国内用户需要设置</span><br><span class="line">export PATH=/Users/sheffi/flutter/bin:$PATH</span><br></pre></td></tr></table></figure></li></ul><img src="/2019/09/18/macOS上搭建Flutter开发环境/截图1.png" title="截图1"><ul><li><p>配置完成后，需要用source命令重新加载一下 ，具体命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.bash_profile</span><br></pre></td></tr></table></figure></li><li><p>完成这些步骤后，可以使用命令进行检测一下，是否安装成功。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flutter -h</span><br></pre></td></tr></table></figure></li><li><p>如图，说明一切安装顺利</p><img src="/2019/09/18/macOS上搭建Flutter开发环境/截图2.png" title="截图2"></li></ul><ol start="4"><li>检查开发环境</li></ol><ul><li><p>到这我们已经安装好了flutter，但是还不具备开发环境。开发还需要很多软件和插件的支持，那到底需要哪些插件和软件那？我们可以使用Flutter为我们提供的命令来进行检查：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flutter doctor</span><br></pre></td></tr></table></figure></li><li><p>因为我所有的东西都安装完，显示如下</p><img src="/2019/09/18/macOS上搭建Flutter开发环境/截图3.png" title="截图3"></li><li>第一次安装根据终端的提示进行安装相应的软件和插件。</li></ul><h2 id="安装-Xcode"><a href="#安装-Xcode" class="headerlink" title="安装 Xcode"></a>安装 Xcode</h2><p> 要为iOS开发Flutter应用程序，您需要Xcode 9.0或更高版本:</p><ul><li>安装Xcode 9.0或更新版本(通过链接下载或苹果应用商店).</li><li>配置Xcode命令行工具以使用新安装的Xcode版本 sudo xcode-select –switch /Applications/Xcode.app/Contents/Developer 对于大多数情况，当您想要使用最新版本的Xcode时，这是正确的路径。如果您需要使用不同的版本，请指定相应路径。</li><li>确保Xcode许可协议是通过打开一次Xcode或通过命令sudo xcodebuild -license同意过了.</li><li>使用Xcode，您可以在iOS设备或模拟器上运行Flutter应用程序。</li></ul><h2 id="安装Android-Studio"><a href="#安装Android-Studio" class="headerlink" title="安装Android Studio"></a>安装Android Studio</h2><p>要在Android设备上构建并运行Flutter程序都需要先安装Android Studio，可以先自行下载并安装Android Studio，在此不再赘述。</p><p>Android Studio 配置与使用</p><p>a. 需要安装两个插件:</p><ul><li>Flutter插件： 支持Flutter开发工作流 (运行、调试、热重载等)。</li><li>Dart插件： 提供代码分析 (输入代码时进行验证、代码补全等)。</li></ul><p>b. 安装步骤：</p><ul><li>启动Android Studio。</li><li>打开插件首选项 (macOS：Preferences&gt;Plugins, Windows：File&gt;Settings&gt;Plugins)。</li><li>选择 Browse repositories…，选择 flutter 插件并点击 install。</li><li>重启Android Studio后插件生效。</li></ul><p>c. 创建Flutter应用</p><ul><li>选择 File&gt;New Flutter Project 。</li><li>选择 Flutter application 作为 project 类型, 然后点击 Next。</li><li>输入项目名称 (如 myapp)，然后点击 Next。</li><li>点击 Finish。</li><li>等待Android Studio安装SDK并创建项目。</li></ul><p>d. 运行应用程序</p><ul><li>定位到Android Studio工具栏<img src="/2019/09/18/macOS上搭建Flutter开发环境/截图4.png" title="截图4"></li><li>在 target selector 中, 选择一个运行该应用的Android设备。如果没有列出可用，请选择 Tools&gt;AVD Manager 并在那里创建一个。</li><li>在工具栏中点击 Run图标</li><li>如果一切正常, 您应该在您的设备或模拟器上会看到启动的应用程序：<img src="/2019/09/18/macOS上搭建Flutter开发环境/截图5.png" title="截图5"></li></ul><p><strong>VS Code的配置与使用</strong><br>VS Code是一个轻量级编辑器，支持Flutter运行和调试。</p><p>a. 安装flutter插件</p><ul><li>启动 VS Code。</li><li>调用 View&gt;Command Palette…。</li><li>输入 ‘install’, 然后选择 Extensions: Install Extension action。</li><li>在搜索框输入 flutter ，在搜索结果列表中选择 ‘Flutter’, 然后点击 Install。</li><li>选择 ‘OK’ 重新启动 VS Code。<br>b. 验证配置</li><li>调用 View&gt;Command Palette…</li><li>输入 ‘doctor’, 然后选择 ‘Flutter: Run Flutter Doctor’ action。</li><li>查看“OUTPUT”窗口中的输出是否有问题<br>c. 创建Flutter应用</li><li>启动 VS Code</li><li>调用 View&gt;Command Palette…</li><li>输入 ‘flutter’, 然后选择 ‘Flutter: New Project’ action</li><li>输入 Project 名称 (如myapp), 然后按回车键</li><li>指定放置项目的位置，然后按蓝色的确定按钮</li><li>等待项目创建继续，并显示main.dart文件</li></ul><p>最后附上学习链接：<a href="https://flutterchina.club" target="_blank" rel="noopener">Flutter中文网</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;系统要求&quot;&gt;&lt;a href=&quot;#系统要求&quot; class=&quot;headerlink&quot; title=&quot;系统要求&quot;&gt;&lt;/a&gt;系统要求&lt;/h2&gt;&lt;p&gt;要安装并运行Flutter，您的开发环境必须满足以下最低要求:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;操作系统: macOS (64-bit)&lt;/li&gt;
&lt;li&gt;磁盘空间: 700 MB (不包括Xcode或Android Studio的磁盘空间）.&lt;/li&gt;
&lt;li&gt;工具: Flutter 依赖下面这些命令行工具.&lt;/li&gt;
&lt;li&gt;bash、mkdir、rm、git、curl、unzip、which
    
    </summary>
    
      <category term="Flutter" scheme="http://yoursite.com/categories/Flutter/"/>
    
    
      <category term="Flutter" scheme="http://yoursite.com/tags/Flutter/"/>
    
  </entry>
  
  <entry>
    <title>十七款PDF在线转换器</title>
    <link href="http://yoursite.com/2019/09/10/%E5%8D%81%E4%B8%83%E6%AC%BEPDF%E5%9C%A8%E7%BA%BF%E8%BD%AC%E6%8D%A2%E5%99%A8/"/>
    <id>http://yoursite.com/2019/09/10/十七款PDF在线转换器/</id>
    <published>2019-09-10T03:17:17.000Z</published>
    <updated>2019-09-10T03:18:50.702Z</updated>
    
    <content type="html"><![CDATA[<p>目前最全合集，收藏备用。</p><p>1、smallPDF：<a href="https://smallpdf.com/" target="_blank" rel="noopener">https://smallpdf.com/</a><br>2、Online OCR：<a href="https://www.onlineocr.net/" target="_blank" rel="noopener">https://www.onlineocr.net/</a><br>3、PDF to Word Converter：<a href="https://www.pdftoword.com/" target="_blank" rel="noopener">https://www.pdftoword.com/</a><br>4、加加PDF：<a href="https://www.addpdf.cn/pdf-to-word" target="_blank" rel="noopener">https://www.addpdf.cn/pdf-to-word</a><br>5、ilovePDF：<a href="https://www.ilovepdf.com/" target="_blank" rel="noopener">https://www.ilovepdf.com/</a><br>6、PDFconverter：<a href="https://www.pdfconverter.com" target="_blank" rel="noopener">https://www.pdfconverter.com</a><br>7、PDFbao：<a href="http://www.pdfbao.com/" target="_blank" rel="noopener">http://www.pdfbao.com/</a><br>8、PDF转换器：<a href="http://www.pdfdo.com/" target="_blank" rel="noopener">http://www.pdfdo.com/</a><br>9、cloudconvert：<a href="https://cloudconvert.com/pdf-to-doc" target="_blank" rel="noopener">https://cloudconvert.com/pdf-to-doc</a><br>10、迅捷PDF转换器：<a href="https://app.xunjiepdf.com/" target="_blank" rel="noopener">https://app.xunjiepdf.com/</a><br>11、ApowerPDF）：<a href="https://www.apowersoft.cn/pdf-editor" target="_blank" rel="noopener">https://www.apowersoft.cn/pdf-editor</a><br>12、PDF2go：<a href="https://www.pdf2go.com/zh/" target="_blank" rel="noopener">https://www.pdf2go.com/zh/</a><br>13、ABBYY FineReader：<a href="http://ocr.abbyy.cn/" target="_blank" rel="noopener">http://ocr.abbyy.cn/</a><br>14、PDF.IO：<a href="https://pdf.io/tw/" target="_blank" rel="noopener">https://pdf.io/tw/</a><br>15、PDFtodoc：<a href="http://pdf2doc.com/zh/" target="_blank" rel="noopener">http://pdf2doc.com/zh/</a><br>16、pdfcandy：<a href="https://pdfcandy.com/" target="_blank" rel="noopener">https://pdfcandy.com/</a><br>17、Docs.Zone：<a href="https://docs.zone/" target="_blank" rel="noopener">https://docs.zone/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;目前最全合集，收藏备用。&lt;/p&gt;
&lt;p&gt;1、smallPDF：&lt;a href=&quot;https://smallpdf.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://smallpdf.com/&lt;/a&gt;&lt;br&gt;2、Online OCR：&lt;
      
    
    </summary>
    
      <category term="PDF" scheme="http://yoursite.com/categories/PDF/"/>
    
    
  </entry>
  
  <entry>
    <title>[译] 成为一个优秀程序员的101个小建议</title>
    <link href="http://yoursite.com/2019/08/29/%E8%AF%91-%E6%88%90%E4%B8%BA%E4%B8%80%E4%B8%AA%E4%BC%98%E7%A7%80%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84101%E4%B8%AA%E5%B0%8F%E5%BB%BA%E8%AE%AE/"/>
    <id>http://yoursite.com/2019/08/29/译-成为一个优秀程序员的101个小建议/</id>
    <published>2019-08-29T01:26:09.000Z</published>
    <updated>2019-08-29T02:20:03.218Z</updated>
    
    <content type="html"><![CDATA[<p><strong>原文作者：</strong><a href="https://dev.to/emmawedekind" target="_blank" rel="noopener">Emma Wedekind</a></p><p><strong>原文链接：</strong><a href="https://dev.to/emmawedekind/101-tips-for-being-a-great-programmer-human-36nl" target="_blank" rel="noopener">dev.to/emmawedekin…</a></p><h2 id="1-善用google⭐"><a href="#1-善用google⭐" class="headerlink" title="1. 善用google⭐"></a>1. 善用google⭐</h2><p>作为一名程序员，你要知道如何搜索问题的答案。学会有效的使用google，你将节省大量开发时间。<br><em>注：国内程序员还是要遵守规则的情况下跨过那道墙看看</em></p><h2 id="2-谨慎承诺超额交付⭐"><a href="#2-谨慎承诺超额交付⭐" class="headerlink" title="2. 谨慎承诺超额交付⭐"></a>2. 谨慎承诺超额交付⭐</h2><p>让你的团队知道一项任务需要三周的时间，并在两周内完成，这比让他们知道相反的情况要好。通过谨慎承诺和超额交付，你会建立信任。</p><img src="/2019/08/29/译-成为一个优秀程序员的101个小建议/a1.png" title="a1"><a id="more"></a><h2 id="3-善待产品设计人员，他们是你的朋友"><a href="#3-善待产品设计人员，他们是你的朋友" class="headerlink" title="3. 善待产品设计人员，他们是你的朋友"></a>3. 善待产品设计人员，他们是你的朋友</h2><p>产品设计人员为用户的痛点提供解决方案。向他们学习，团结一致地构建有效的产品。</p><h2 id="4-找到一名导师"><a href="#4-找到一名导师" class="headerlink" title="4. 找到一名导师"></a>4. 找到一名导师</h2><p>找到一个可以学习和借鉴的人。如果你需要技术指导，Coding Coach会是一个不错的地方。</p><h2 id="5-成为一名导师"><a href="#5-成为一名导师" class="headerlink" title="5. 成为一名导师"></a>5. 成为一名导师</h2><p>做一个别人可以学习和借鉴的人。你可以尝试在Coding Coach成为别人的导师。<br>这个网站并不是很了解，请自行斟酌。国内厉害的程序员也很多，掘金，知乎上找也可以。</p><h2 id="6-写些有用的评论"><a href="#6-写些有用的评论" class="headerlink" title="6. 写些有用的评论"></a>6. 写些有用的评论</h2><p>写下有用的回答而不是问为什么，mark和灌水也没什么意思。</p><h2 id="7-合理的命名变量和函数名"><a href="#7-合理的命名变量和函数名" class="headerlink" title="7. 合理的命名变量和函数名"></a>7. 合理的命名变量和函数名</h2><p>函数和变量应该准确地表示它们的用途，因此myCoolFunction不是一个好名字。</p><h2 id="8-给自己放个假"><a href="#8-给自己放个假" class="headerlink" title="8. 给自己放个假"></a>8. 给自己放个假</h2><p>我们都需要时间来缓解压力。去一个你一直想去的地方放个假。你的大脑和同事都会感谢你的。</p><h2 id="9-删除无用代码⭐"><a href="#9-删除无用代码⭐" class="headerlink" title="9. 删除无用代码⭐"></a>9. 删除无用代码⭐</h2><p>没有理由积累更多技术债务。</p><h2 id="10-学会阅读代码⭐"><a href="#10-学会阅读代码⭐" class="headerlink" title="10. 学会阅读代码⭐"></a>10. 学会阅读代码⭐</h2><p>阅读代码是一项非常宝贵的被低估的技能。</p><h2 id="11-找到健康工作和生活平衡点"><a href="#11-找到健康工作和生活平衡点" class="headerlink" title="11. 找到健康工作和生活平衡点"></a>11. 找到健康工作和生活平衡点</h2><p>结束一周的工作之后，周末放松一下。关闭工作通知，删除手机上的应用程序。</p><img src="/2019/08/29/译-成为一个优秀程序员的101个小建议/a2.png" title="a2"><h2 id="12-只安排必要的会议"><a href="#12-只安排必要的会议" class="headerlink" title="12. 只安排必要的会议"></a>12. 只安排必要的会议</h2><p>能用邮件解决的就没必要开会，如果非要开，也应该让会议简短高效。</p><h2 id="13-结对编程"><a href="#13-结对编程" class="headerlink" title="13. 结对编程"></a>13. 结对编程</h2><p>结对编程可以让你同时扮演老师和学生的角色。</p><h2 id="14-写好邮件"><a href="#14-写好邮件" class="headerlink" title="14. 写好邮件"></a>14. 写好邮件</h2><p>邮件的内容应该简洁而清晰，抓住重点。没人会想看你的四页邮件，兄弟。</p><h2 id="15-加入社区⭐"><a href="#15-加入社区⭐" class="headerlink" title="15. 加入社区⭐"></a>15. 加入社区⭐</h2><p>和志同道合的人在一起会激励你走出低谷。</p><img src="/2019/08/29/译-成为一个优秀程序员的101个小建议/a3.png" title="a3"><h2 id="16-清理你的分支⭐"><a href="#16-清理你的分支⭐" class="headerlink" title="16. 清理你的分支⭐"></a>16. 清理你的分支⭐</h2><p>清理你的版本控制分支，就像在你的岳父母来访之前清理你的房子一样。如果你不再需要，请删掉它，不删留着过年啊。</p><h2 id="17-接纳萌新"><a href="#17-接纳萌新" class="headerlink" title="17. 接纳萌新"></a>17. 接纳萌新</h2><p>包容点，不要告诉别人不够好，不能进入这个行业。每个人都是有价值。</p><h2 id="18-活到老学到老"><a href="#18-活到老学到老" class="headerlink" title="18. 活到老学到老"></a>18. 活到老学到老</h2><p>你选择了一个需要不断学习的职业，学会爱上它。</p><h2 id="19-永不言弃"><a href="#19-永不言弃" class="headerlink" title="19. 永不言弃"></a>19. 永不言弃</h2><p>这并不容易，但是我们都是从同一个地方开始，你也能做到。</p><h2 id="20-敢于接受有挑战性的任务⭐"><a href="#20-敢于接受有挑战性的任务⭐" class="headerlink" title="20. 敢于接受有挑战性的任务⭐"></a>20. 敢于接受有挑战性的任务⭐</h2><p>如果任务没有挑战，它就不会帮助你成长。</p><h2 id="21-项目开始前明确需求⭐"><a href="#21-项目开始前明确需求⭐" class="headerlink" title="21. 项目开始前明确需求⭐"></a>21. 项目开始前明确需求⭐</h2><p>在开撸之前，你应该了解验收标准，这将为你节省时间和痛苦。</p><img src="/2019/08/29/译-成为一个优秀程序员的101个小建议/a4.png" title="a4"><h2 id="22-工欲善其事，必先利其器⭐"><a href="#22-工欲善其事，必先利其器⭐" class="headerlink" title="22. 工欲善其事，必先利其器⭐"></a>22. 工欲善其事，必先利其器⭐</h2><p>拥有一套你熟悉的工具，了解哪些工具服务于哪些目的，以及项目何时可以从使用这些工具中获益。</p><h2 id="23-我们需要建设性的批评"><a href="#23-我们需要建设性的批评" class="headerlink" title="23. 我们需要建设性的批评"></a>23. 我们需要建设性的批评</h2><p>向信任的同事和朋友寻求建设性的批评，它将帮助你更优秀。</p><h2 id="24-保持开放思维⭐"><a href="#24-保持开放思维⭐" class="headerlink" title="24. 保持开放思维⭐"></a>24. 保持开放思维⭐</h2><p>技术在变化，而且变化得很快。不要反对新技术，学习它，然后形成自己的观点。</p><h2 id="25-保持在技术前沿，不要掉队⭐"><a href="#25-保持在技术前沿，不要掉队⭐" class="headerlink" title="25. 保持在技术前沿，不要掉队⭐"></a>25. 保持在技术前沿，不要掉队⭐</h2><p>通过关注出版物，博客，播客和科技新闻，及时了解最新的科技新闻。</p><h2 id="26-专注于解决问题⭐"><a href="#26-专注于解决问题⭐" class="headerlink" title="26. 专注于解决问题⭐"></a>26. 专注于解决问题⭐</h2><p>锻炼自己解决问题的能力，强大的解决问题的能力能够帮助你应付一切，专注于解决问题的方法。</p><h2 id="27-保持谦虚⭐"><a href="#27-保持谦虚⭐" class="headerlink" title="27. 保持谦虚⭐"></a>27. 保持谦虚⭐</h2><p>三人行必有我师，无论你什么头衔，什么公司，都要保持谦逊。</p><img src="/2019/08/29/译-成为一个优秀程序员的101个小建议/a5.png" title="a5"><h2 id="28-不光要代码写的好，PPT也要讲得好"><a href="#28-不光要代码写的好，PPT也要讲得好" class="headerlink" title="28. 不光要代码写的好，PPT也要讲得好"></a>28. 不光要代码写的好，PPT也要讲得好</h2><p>学习如何吸引你的听众，并给出有效的演示。</p><h2 id="29-选型如买菜，也要货比三家⭐"><a href="#29-选型如买菜，也要货比三家⭐" class="headerlink" title="29. 选型如买菜，也要货比三家⭐"></a>29. 选型如买菜，也要货比三家⭐</h2><p>给自己更多选择，在开展工作前，调研尽可能多的解决方案。</p><h2 id="30-找到自己的定位⭐"><a href="#30-找到自己的定位⭐" class="headerlink" title="30. 找到自己的定位⭐"></a>30. 找到自己的定位⭐</h2><p>科技产业也有很多分类，找到你最感兴趣的领域，并成为一名专家。</p><h2 id="31-养成好习惯⭐"><a href="#31-养成好习惯⭐" class="headerlink" title="31. 养成好习惯⭐"></a>31. 养成好习惯⭐</h2><p>试着建立一致的、健康的习惯，比如保持专注，合理安排时间，出席会议，从最重要的任务开始。这可能需要一些时间来适应，但从长远来看是值得的。</p><img src="/2019/08/29/译-成为一个优秀程序员的101个小建议/a6.png" title="a6"><h2 id="32-学会debug⭐"><a href="#32-学会debug⭐" class="headerlink" title="32. 学会debug⭐"></a>32. 学会debug⭐</h2><p>探索浏览器调试器工具。学习使用IDE调试的细节。通过学习最有效的调试问题和跟踪错误的方法，再困难的bug也能搞定。</p><h2 id="33-锻炼你现有的技能⭐"><a href="#33-锻炼你现有的技能⭐" class="headerlink" title="33. 锻炼你现有的技能⭐"></a>33. 锻炼你现有的技能⭐</h2><p>并不是说你已经掌握了一项技能就不需要再锻炼它。业精于勤荒于嬉，除非有意识地提高技能，否则技能会随着时间的推移而消失。而这个行业又发展得如此之快，坚持练习是很重要的。从“我一直都是这样做的”的心态中走出来，进入“有没有更好的方法来做这件事”的心态。<br>仅仅是因为你现在拥有六块腹肌，不意味着你就可以每天吃一个🍩。</p><h2 id="34-了解原因⭐"><a href="#34-了解原因⭐" class="headerlink" title="34. 了解原因⭐"></a>34. 了解原因⭐</h2><p>有时你必须表达自己的意见，因此了解其背后的原因非常重要。为什么解决方案A比解决方案B更好？提供有效的论据，你的意见将更加可靠。</p><h2 id="35-了解自己的价值"><a href="#35-了解自己的价值" class="headerlink" title="35. 了解自己的价值"></a>35. 了解自己的价值</h2><p>技术也是商品，应该得到适当的报酬。了解你所在地区的行业平均水平。如果你赚的钱少了，是时候和你的老板谈谈，追求你应得的。</p><h2 id="36-不要害怕寻求帮助⭐"><a href="#36-不要害怕寻求帮助⭐" class="headerlink" title="36. 不要害怕寻求帮助⭐"></a>36. 不要害怕寻求帮助⭐</h2><p>如果你被困在一个问题上，花了太多时间寻找解决方案，是时候寻求帮助了。我们都是人，我们都需要帮助，寻求同事的援助并不可耻。</p><h2 id="37-学会学习⭐"><a href="#37-学会学习⭐" class="headerlink" title="37. 学会学习⭐"></a>37. 学会学习⭐</h2><p>人们学习的方式不同，有些人通过视频教程学得最好，有些人通过阅读书籍学得最好。弄清楚你的学习风格，然后努力实践。</p><h2 id="38-与人为善"><a href="#38-与人为善" class="headerlink" title="38. 与人为善"></a>38. 与人为善</h2><p>有时你会被要求向同事提供反馈，友善一点，你可以对某位同事不够积极表达看法，而不是出言不逊。</p><h2 id="39-休息一下"><a href="#39-休息一下" class="headerlink" title="39. 休息一下"></a>39. 休息一下</h2><p>连续敲8个小时代码几乎是不可能，你很快就会筋疲力尽，犯很多错误。所以设个闹钟来提醒自己停下来休息一下。去散散步，和同事一起喝杯咖啡，远离屏幕会对你的工作效率和质量产生积极的影响。</p><h2 id="40-跟踪你的学习进度"><a href="#40-跟踪你的学习进度" class="headerlink" title="40. 跟踪你的学习进度"></a>40. 跟踪你的学习进度</h2><p>学习编程需要时间，当你看不到进展时，你会感到非常沮丧。所以跟踪你的成就和实现目标的进展非常重要。在你的电脑旁边放一个小清单，每次你完成一件事，把它写下来，不管它有多小，最终将会从量变到质变。</p><h2 id="41-不要依赖库和框架⭐"><a href="#41-不要依赖库和框架⭐" class="headerlink" title="41. 不要依赖库和框架⭐"></a>41. 不要依赖库和框架⭐</h2><p>掌握一个框架和库不如深入学习这门语言，没有必要一个接一个的学习这些库和框架，但是理解框架和库如何实现可以帮助你写出更简洁强壮的代码。</p><h2 id="42-学会爱上代码审查"><a href="#42-学会爱上代码审查" class="headerlink" title="42. 学会爱上代码审查"></a>42. 学会爱上代码审查</h2><p>让别人阅读和分析你的代码可能会让你不安，但是可以提供宝贵的反馈，这会让你成为一个更好的程序员。而且你也应该提高进行良好代码评审的能力。</p><h2 id="43-多方位全面学习"><a href="#43-多方位全面学习" class="headerlink" title="43. 多方位全面学习"></a>43. 多方位全面学习</h2><p>学习其他领域的基础知识, 如设计、营销、前端开发或后端开发。它将帮助你成为一个更全面的程序员。</p><h2 id="44-不要选择熟悉的技术，而应该是正确的⭐"><a href="#44-不要选择熟悉的技术，而应该是正确的⭐" class="headerlink" title="44. 不要选择熟悉的技术，而应该是正确的⭐"></a>44. 不要选择熟悉的技术，而应该是正确的⭐</h2><p>每个项目都有不同的需求，因此我们必须为这项工作选择合适的工具。尽管选择以前使用过的技术很方便，但是如果它们不适合项目的需要，应该探索其他替代方案。</p><h2 id="45-勇于承担责任⭐"><a href="#45-勇于承担责任⭐" class="headerlink" title="45. 勇于承担责任⭐"></a>45. 勇于承担责任⭐</h2><p>所有人都会犯错，在你的职业生涯中，你会犯很多很多的错误。因此，当你犯了错误时，站出来承担责任是很重要的，它将与你的团队成员和管理层建立信任。</p><h2 id="46-检查自己的代码⭐"><a href="#46-检查自己的代码⭐" class="headerlink" title="46. 检查自己的代码⭐"></a>46. 检查自己的代码⭐</h2><p>在发起PR请求之前，检查自己的代码，如果这是同事的工作，你会发表什么评论？在请求代码审查之前首先尝试自己诊断问题或错误非常重要，就像考试交卷前应该自己检查一遍。</p><h2 id="47-从失败中吸取教训⭐"><a href="#47-从失败中吸取教训⭐" class="headerlink" title="47. 从失败中吸取教训⭐"></a>47. 从失败中吸取教训⭐</h2><p>失败只是没有达到预期的结果，并不一定是件坏事。在我们的职业生涯中，我们会面临很多失败，从失败中学习下次你能做些什么。</p><h2 id="48-正视自己的缺点"><a href="#48-正视自己的缺点" class="headerlink" title="48. 正视自己的缺点"></a>48. 正视自己的缺点</h2><p>了解你自己，你的缺点是什么?也许你总是在推送之前忘记更新测试，或者你真的不擅长回复电子邮件。了解你的弱点，这样你就能积极地改善它们。</p><h2 id="49-保持好奇心⭐"><a href="#49-保持好奇心⭐" class="headerlink" title="49. 保持好奇心⭐"></a>49. 保持好奇心⭐</h2><p>这个行业在不断发展，所以好奇心很重要。如果你不明白什么，不管是项目需求还是一行代码，大声说出来。没有人会因为你要求说明而批评你，你会因此创造出更好的代码。</p><h2 id="50-不要试图学习一切⭐"><a href="#50-不要试图学习一切⭐" class="headerlink" title="50. 不要试图学习一切⭐"></a>50. 不要试图学习一切⭐</h2><p>世界上有无穷无尽的知识宝库，你不可能征服它。选择几个要掌握的主题，其余的就不要管了。你可以获得其他领域的相关知识，但你不可能掌握所有内容。</p><h2 id="51-该舍弃就舍弃"><a href="#51-该舍弃就舍弃" class="headerlink" title="51. 该舍弃就舍弃"></a>51. 该舍弃就舍弃</h2><p>仅仅因为你写了一些代码并不意味着你需要对它产生感情。没有人喜欢他们所做的工作被丢弃，但是代码有一个生命周期，所以没有必要一直保留着它。</p><h2 id="52-团队支持"><a href="#52-团队支持" class="headerlink" title="52. 团队支持"></a>52. 团队支持</h2><p>优秀的团队相互支持，这为尝试新事物创造了一个安全的空间，而不用担心受到惩罚。</p><h2 id="53-在社区中寻找鼓舞"><a href="#53-在社区中寻找鼓舞" class="headerlink" title="53. 在社区中寻找鼓舞"></a>53. 在社区中寻找鼓舞</h2><p>在行业里找几个你钦佩的人。它会激励你继续你的项目或尝试新事物</p><h2 id="54-重视并且珍惜你的工作"><a href="#54-重视并且珍惜你的工作" class="headerlink" title="54. 重视并且珍惜你的工作"></a>54. 重视并且珍惜你的工作</h2><p>不管你有多少经验或者你的职位是什么，你的工作都是有价值的，给予它应有的价值。</p><img src="/2019/08/29/译-成为一个优秀程序员的101个小建议/a7.png" title="a7"><h2 id="55-排除干扰"><a href="#55-排除干扰" class="headerlink" title="55. 排除干扰"></a>55. 排除干扰</h2><p>关掉闲置的通知、短信、电子邮件和社交媒体会帮助你集中精力，最大化你的工作日。晚30分钟回复你朋友的信息，他死不了，真有事就打电话了。</p><h2 id="56-乐于助人"><a href="#56-乐于助人" class="headerlink" title="56. 乐于助人"></a>56. 乐于助人</h2><p>试着支持你的团队成员，无论是参加一个重要的演讲，还是在他们遇到困难时帮助他们。</p><h2 id="57-不要吝啬你的赞美⭐"><a href="#57-不要吝啬你的赞美⭐" class="headerlink" title="57. 不要吝啬你的赞美⭐"></a>57. 不要吝啬你的赞美⭐</h2><p>如果有人做得很好，告诉他们。正面反馈是与团队成员建立信任和帮助他们事业发展的好方法。他们也更有可能帮助你</p><h2 id="58-测试你的代码⭐"><a href="#58-测试你的代码⭐" class="headerlink" title="58. 测试你的代码⭐"></a>58. 测试你的代码⭐</h2><p>测试是很重要的。单元测试、回归测试、集成测试、端到端测试。测试你的代码，你的产品将会更加稳定。</p><h2 id="59-制定应对计划"><a href="#59-制定应对计划" class="headerlink" title="59. 制定应对计划"></a>59. 制定应对计划</h2><p>当你收到一个新功能需求或bug修改时，先制定应对计划，你需要什么来解决这个问题或开发这个特性？花几分钟来做这件事，也许后面可以为你节省数小时的沮丧。</p><h2 id="60-掌握伪代码"><a href="#60-掌握伪代码" class="headerlink" title="60. 掌握伪代码"></a>60. 掌握伪代码</h2><p>伪代码是一项很好的技能，因为它允许你在不浪费时间编写代码的情况下考虑复杂的问题。将一种方法写在纸上，运行不同的测试用例，看看缺陷在哪里。</p><h2 id="61-记录你的成就"><a href="#61-记录你的成就" class="headerlink" title="61. 记录你的成就"></a>61. 记录你的成就</h2><p>如果你在工作中获得了嘉奖，把它写下来。如果你开发了一个重要的功能，把它写下来。你会拥有一些积累、沉淀，它将有助于你职业晋升亦或在某一艰难的日子鼓舞你的士气。</p><h2 id="62-学习编程基础⭐"><a href="#62-学习编程基础⭐" class="headerlink" title="62. 学习编程基础⭐"></a>62. 学习编程基础⭐</h2><p>学习一些基本的排序和搜索算法以及数据结构。它们与语言无关，可以帮助你跨语言解决问题。</p><h2 id="63-选择长期维护的技术"><a href="#63-选择长期维护的技术" class="headerlink" title="63. 选择长期维护的技术"></a>63. 选择长期维护的技术</h2><p>尽管测试最新的技术很有趣，但是选择那些在企业应用程序中易于维护的技术。你们的团队将在未来的岁月里感谢你们。</p><h2 id="64-学习设计模式⭐"><a href="#64-学习设计模式⭐" class="headerlink" title="64. 学习设计模式⭐"></a>64. 学习设计模式⭐</h2><p>设计模式是构建代码的有效工具。你可能不是每个项目都需要它们，但是对它们有一个基本的了解将有助于构建更大的应用程序。</p><h2 id="65-化繁为简⭐"><a href="#65-化繁为简⭐" class="headerlink" title="65. 化繁为简⭐"></a>65. 化繁为简⭐</h2><p>不要编写复杂的代码来展示你高超的编程技能，而要着眼于可读性和简单性。这将使你的团队成员更容易做出贡献。</p><h2 id="66-还清技术债务"><a href="#66-还清技术债务" class="headerlink" title="66. 还清技术债务"></a>66. 还清技术债务</h2><p>技术债务可能会对性能产生巨大影响，所以如果能够重构，就应该重构。（这个建议绝对是好的，但是现实中要面临诸多问题）</p><h2 id="67-优先小版本迭代"><a href="#67-优先小版本迭代" class="headerlink" title="67. 优先小版本迭代"></a>67. 优先小版本迭代</h2><p>与其每个月发布一次大规模的升级，不如更频繁地发布较小的变更。这样你不太可能会引入bug和破坏更改。</p><h2 id="68-尽早并经常提交⭐"><a href="#68-尽早并经常提交⭐" class="headerlink" title="68. 尽早并经常提交⭐"></a>68. 尽早并经常提交⭐</h2><p>尽早提交和经常提交是确保你的工作保持干净的最好方法，并且还可以减少意外地恢复重要更改的压力。</p><h2 id="69-了解何时寻求帮助"><a href="#69-了解何时寻求帮助" class="headerlink" title="69. 了解何时寻求帮助"></a>69. 了解何时寻求帮助</h2><p>你不仅不应该害怕寻求帮助，而且你应该学会什么时候寻求帮助。在寻求帮助之前，你应该试着解决问题，并记录下你尝试的事情。但是当你被一个简单的问题难住一个多小时的时候，代价大于收益，你应该向同事求助。</p><h2 id="70-问一些有效的问题⭐"><a href="#70-问一些有效的问题⭐" class="headerlink" title="70. 问一些有效的问题⭐"></a>70. 问一些有效的问题⭐</h2><p>当你问问题的时候，要尽可能的具体，（可以参考github提issue的要求）。</p><h2 id="71-工作中及时寻求反馈"><a href="#71-工作中及时寻求反馈" class="headerlink" title="71. 工作中及时寻求反馈"></a>71. 工作中及时寻求反馈</h2><p>你的工作不需要完成就能得到反馈。如果你不确定方向，请一位值得信赖的同事来检查你的解决方案的有效性。</p><h2 id="72-阅读文档⭐"><a href="#72-阅读文档⭐" class="headerlink" title="72. 阅读文档⭐"></a>72. 阅读文档⭐</h2><p>文档是关于技术的最纯粹的事实来源，因此学习阅读文档可以快速帮助你成为专家。</p><h2 id="73-尽可能做出各种尝试⭐"><a href="#73-尽可能做出各种尝试⭐" class="headerlink" title="73. 尽可能做出各种尝试⭐"></a>73. 尽可能做出各种尝试⭐</h2><p>没有什么能阻止你尝试解决问题的方法，你有什么损失呢？</p><h2 id="74-在会议上积极发言"><a href="#74-在会议上积极发言" class="headerlink" title="74. 在会议上积极发言"></a>74. 在会议上积极发言</h2><p>你的想法和意见是有价值的，所以参加会议将有助于你与你的团队和管理层建立融洽的关系。</p><h2 id="75-跨团队协作"><a href="#75-跨团队协作" class="headerlink" title="75. 跨团队协作"></a>75. 跨团队协作</h2><p>如果你有机会和公司里的其他团队一起工作，那就去争取吧。</p><h2 id="76-保持项目热情"><a href="#76-保持项目热情" class="headerlink" title="76. 保持项目热情"></a>76. 保持项目热情</h2><p>当你每周工作40个小时时，花时间做你感兴趣的项目是很重要的（72小时的话更要如此）。它们可以帮助你重新找回对编程的热爱，并尝试你在工作中可能无法接触到的新技术。</p><h2 id="77-确定你的职业目标⭐"><a href="#77-确定你的职业目标⭐" class="headerlink" title="77. 确定你的职业目标⭐"></a>77. 确定你的职业目标⭐</h2><p>对你的职业生涯有一个理想的轨迹是很重要的。如果你不这样做，你就是在没有目标的情况下射箭。</p><h2 id="78-加入到讨论中来⭐"><a href="#78-加入到讨论中来⭐" class="headerlink" title="78. 加入到讨论中来⭐"></a>78. 加入到讨论中来⭐</h2><p>在博客上发表评论，参与Twitter主题，参与社区活动，做一个积极的旁观者会比单纯的旁观学到更多东西。</p><h2 id="79-确定任务优先级"><a href="#79-确定任务优先级" class="headerlink" title="79. 确定任务优先级"></a>79. 确定任务优先级</h2><p>学会确定任务的优先顺序将有助于提高您的工作效率，建立一个日常任务和长期任务待办事项列表，并按最重要的顺序排序。</p><h2 id="80-不要忽略细节"><a href="#80-不要忽略细节" class="headerlink" title="80. 不要忽略细节"></a>80. 不要忽略细节</h2><p>细节可以在项目中产生很大的影响。</p><h2 id="81-信任你的同事"><a href="#81-信任你的同事" class="headerlink" title="81. 信任你的同事"></a>81. 信任你的同事</h2><p>你的同事因为他们的技能而被雇佣，交给他们工作，并相信他们能完成。</p><h2 id="82-学会委托"><a href="#82-学会委托" class="headerlink" title="82. 学会委托"></a>82. 学会委托</h2><p>如果你处于领导地位，学习如何有效地委派任务。它会节省你的时间，你不能做所有的事。</p><h2 id="83-不要拿自己和别人比较"><a href="#83-不要拿自己和别人比较" class="headerlink" title="83. 不要拿自己和别人比较"></a>83. 不要拿自己和别人比较</h2><p>你唯一应该比较的是昨天的自己。</p><h2 id="84-找到你的盟友"><a href="#84-找到你的盟友" class="headerlink" title="84. 找到你的盟友"></a>84. 找到你的盟友</h2><p>学习编程将是一个漫长而不怎么容易的过程，和那些帮助你成长并鼓励你坚持下去的人在一起。</p><h2 id="85-不要想一步登天⭐"><a href="#85-不要想一步登天⭐" class="headerlink" title="85. 不要想一步登天⭐"></a>85. 不要想一步登天⭐</h2><p>一开始考虑太多做一个大而全的项目会让你不堪重负。构建时要考虑可伸缩性，但在需要时才开始扩展。这样你就不会用不必要的膨胀来压倒你的团队，而是保持了成长的能力。</p><h2 id="86-衡量性能影响⭐"><a href="#86-衡量性能影响⭐" class="headerlink" title="86. 衡量性能影响⭐"></a>86. 衡量性能影响⭐</h2><p>如果你想使用一种很酷的新技术，你应该权衡这样做的性能影响。你能在不影响性能的情况下实现类似的功能吗？如果可以，你可能需要重新考虑你的方法了。</p><h2 id="87-技术歧视不可取⭐"><a href="#87-技术歧视不可取⭐" class="headerlink" title="87. 技术歧视不可取⭐"></a>87. 技术歧视不可取⭐</h2><p>不要歧视新技术或新想法，对学习新技能的可能性保持开放的心态，也不要歧视他人，我们都值得尊重。（也不要歧视旧技术，即使现在前端框架盛行，但你也不能说Jquery就没有任何可取之处。）</p><h2 id="88-申请你不能胜任的工作"><a href="#88-申请你不能胜任的工作" class="headerlink" title="88. 申请你不能胜任的工作"></a>88. 申请你不能胜任的工作</h2><p>你永远不可能满足工作的所有要求，所以抓住机会申请吧，你有什么损失呢？</p><h2 id="89-模块化你的代码"><a href="#89-模块化你的代码" class="headerlink" title="89. 模块化你的代码"></a>89. 模块化你的代码</h2><p>你可以在一个长文件中编写所有代码，但这是不可维护的。通过模块化，我们确保代码易于理解和测试。</p><h2 id="90-不要只是做代码的搬运工⭐"><a href="#90-不要只是做代码的搬运工⭐" class="headerlink" title="90. 不要只是做代码的搬运工⭐"></a>90. 不要只是做代码的搬运工⭐</h2><p>如果你要复制并粘贴Stack Overflow中的解决方案，你应该确切地理解它的作用，有意识地选择要引入的代码。</p><h2 id="91-创造一个舒适的工作环境⭐"><a href="#91-创造一个舒适的工作环境⭐" class="headerlink" title="91. 创造一个舒适的工作环境⭐"></a>91. 创造一个舒适的工作环境⭐</h2><p>如果你喜欢你的工作环境和技术设置，你会更有动力去工作，所以还在等什么？</p><h2 id="92-记住你来自哪里"><a href="#92-记住你来自哪里" class="headerlink" title="92. 记住你来自哪里"></a>92. 记住你来自哪里</h2><p>我们都是从同一个地方开始的，随着你的技能和职位的发展，不要忘记你来自哪里，不要膨胀。</p><h2 id="93-试着保持乐观"><a href="#93-试着保持乐观" class="headerlink" title="93. 试着保持乐观"></a>93. 试着保持乐观</h2><p>如果出了什么问题，试着乐观一点。明天是新的一天。乐观会帮助你的团队充满活力和精神健康。</p><h2 id="94-不断重新评估你的工作流程⭐"><a href="#94-不断重新评估你的工作流程⭐" class="headerlink" title="94. 不断重新评估你的工作流程⭐"></a>94. 不断重新评估你的工作流程⭐</h2><p>仅仅因为某样东西现在有效，并不意味着它永远有效。重新评估你的工作流程，并在必要时做出调整。</p><h2 id="95-学会在家办公"><a href="#95-学会在家办公" class="headerlink" title="95. 学会在家办公"></a>95. 学会在家办公</h2><p>如果你有能力在家工作，那就学会有效地在家工作。找一个独立的办公空间，远离干扰。Boneskull写了一篇很棒的关于在家工作的文章，你应该看看。</p><img src="/2019/08/29/译-成为一个优秀程序员的101个小建议/a8.png" title="a8"><h2 id="96-无障碍代码"><a href="#96-无障碍代码" class="headerlink" title="96. 无障碍代码"></a>96. 无障碍代码</h2><p>无障碍不是事后才想到的，也不一定很难，每个人都应该能够使用你的产品。</p><h2 id="97-遵守你的承诺⭐"><a href="#97-遵守你的承诺⭐" class="headerlink" title="97. 遵守你的承诺⭐"></a>97. 遵守你的承诺⭐</h2><p>如果你告诉别人你会在某一天完成某件事，要信守承诺。如果你不能在截止日期前完成任务，那就早点说出来。</p><h2 id="98-积极主动"><a href="#98-积极主动" class="headerlink" title="98. 积极主动"></a>98. 积极主动</h2><p>如果你有额外的精力，找一个任务来帮助你的团队，他们会很感激你是主动的。</p><h2 id="99-创建一个令人惊叹的作品集"><a href="#99-创建一个令人惊叹的作品集" class="headerlink" title="99. 创建一个令人惊叹的作品集"></a>99. 创建一个令人惊叹的作品集</h2><p>一个优秀的作品集让你与众不同，使用它作为展示你的编程和设计技巧的机会！</p><h2 id="100-记住你喜欢编程的原因⭐"><a href="#100-记住你喜欢编程的原因⭐" class="headerlink" title="100. 记住你喜欢编程的原因⭐"></a>100. 记住你喜欢编程的原因⭐</h2><p>你进入这个行业是因为它激发了你的兴趣，如果你感到沮丧和怨恨，休息一下，给自己空间重新点燃你对编程的激情。</p><h2 id="101-分享你的知识⭐"><a href="#101-分享你的知识⭐" class="headerlink" title="101. 分享你的知识⭐"></a>101. 分享你的知识⭐</h2><p>如果你学到了一些很酷的东西，不要吝惜分享它，参加当地的技术交流会，在午餐时间教你的同事或学员，分享你的知识可以让更多人受益同时自己也能巩固提高。</p><p>最后多加两条：</p><h2 id="102-条适当锻炼和"><a href="#102-条适当锻炼和" class="headerlink" title="102. 条适当锻炼和"></a>102. 条适当锻炼和</h2><h2 id="103-条充足睡眠"><a href="#103-条充足睡眠" class="headerlink" title="103. 条充足睡眠"></a>103. 条充足睡眠</h2><img src="/2019/08/29/译-成为一个优秀程序员的101个小建议/a9.png" title="a9">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;原文作者：&lt;/strong&gt;&lt;a href=&quot;https://dev.to/emmawedekind&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Emma Wedekind&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;原文链接：&lt;/strong&gt;&lt;a href=&quot;https://dev.to/emmawedekind/101-tips-for-being-a-great-programmer-human-36nl&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;dev.to/emmawedekin…&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-善用google⭐&quot;&gt;&lt;a href=&quot;#1-善用google⭐&quot; class=&quot;headerlink&quot; title=&quot;1. 善用google⭐&quot;&gt;&lt;/a&gt;1. 善用google⭐&lt;/h2&gt;&lt;p&gt;作为一名程序员，你要知道如何搜索问题的答案。学会有效的使用google，你将节省大量开发时间。&lt;br&gt;&lt;em&gt;注：国内程序员还是要遵守规则的情况下跨过那道墙看看&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;2-谨慎承诺超额交付⭐&quot;&gt;&lt;a href=&quot;#2-谨慎承诺超额交付⭐&quot; class=&quot;headerlink&quot; title=&quot;2. 谨慎承诺超额交付⭐&quot;&gt;&lt;/a&gt;2. 谨慎承诺超额交付⭐&lt;/h2&gt;&lt;p&gt;让你的团队知道一项任务需要三周的时间，并在两周内完成，这比让他们知道相反的情况要好。通过谨慎承诺和超额交付，你会建立信任。&lt;/p&gt;
&lt;img src=&quot;/2019/08/29/译-成为一个优秀程序员的101个小建议/a1.png&quot; title=&quot;a1&quot;&gt;
    
    </summary>
    
      <category term="译文" scheme="http://yoursite.com/categories/%E8%AF%91%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>iOS内购相关封装</title>
    <link href="http://yoursite.com/2019/05/28/iOS%E5%86%85%E8%B4%AD%E7%9B%B8%E5%85%B3%E5%B0%81%E8%A3%85/"/>
    <id>http://yoursite.com/2019/05/28/iOS内购相关封装/</id>
    <published>2019-05-28T09:10:23.000Z</published>
    <updated>2021-11-24T08:06:09.634Z</updated>
    
    <content type="html"><![CDATA[<h3 id="将内购相关d功能封装成单例类，直接上代码"><a href="#将内购相关d功能封装成单例类，直接上代码" class="headerlink" title="将内购相关d功能封装成单例类，直接上代码"></a>将内购相关d功能封装成单例类，直接上代码</h3><p>.h相关代码如下：<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line">#import &lt;Foundation/Foundation.h&gt;</span><br><span class="line">#import &lt;StoreKit/StoreKit.h&gt;</span><br><span class="line"></span><br><span class="line">@protocol YYAInAppPurchaseToolDelegate &lt;NSObject&gt;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">*  TODO: System error.</span><br><span class="line">*/</span><br><span class="line">- (void)IAPToolSysWrong;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">*  已刷新可购买商品</span><br><span class="line">*</span><br><span class="line">*  @param products 商品数组</span><br><span class="line">*/</span><br><span class="line">- (void)IAPToolGotProducts:(NSMutableArray *)products;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">*  购买成功</span><br><span class="line">*</span><br><span class="line">*  @param productID 购买成功的商品ID</span><br><span class="line">*/</span><br><span class="line">- (void)IAPToolBoughtProductSuccessedWithProductID:(NSString *)productID</span><br><span class="line">andInfo:(NSDictionary *)infoDic;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">*  取消购买</span><br><span class="line">*</span><br><span class="line">*  @param productID 商品ID</span><br><span class="line">*/</span><br><span class="line">- (void)IAPToolCanceldWithProductID:(NSString *)productID;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">*  购买成功，开始验证购买</span><br><span class="line">*</span><br><span class="line">*  @param productID 商品ID</span><br><span class="line">*/</span><br><span class="line">- (void)IAPToolBeginCheckingdWithProductID:(NSString *)productID;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">*  重复验证</span><br><span class="line">*</span><br><span class="line">*  @param productID 商品ID</span><br><span class="line">*/</span><br><span class="line">- (void)IAPToolCheckRedundantWithProductID:(NSString *)productID;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">*  验证失败</span><br><span class="line">*</span><br><span class="line">*  @param productID 商品ID</span><br><span class="line">*/</span><br><span class="line">- (void)IAPToolCheckFailedWithProductID:(NSString *)productID</span><br><span class="line">andInfo:(NSData *)infoData;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">*  恢复了已购买的商品（永久性商品）</span><br><span class="line">*</span><br><span class="line">*  @param productID 商品ID</span><br><span class="line">*/</span><br><span class="line">- (void)IAPToolRestoredProductID:(NSString *)productID;</span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">NS_ASSUME_NONNULL_BEGIN</span><br><span class="line"></span><br><span class="line">@interface YYAInAppPurchaseTool : NSObject</span><br><span class="line"></span><br><span class="line">typedef void(^BoolBlock)(BOOL successed,BOOL result);</span><br><span class="line"></span><br><span class="line">typedef void(^DicBlock)(BOOL successed,NSDictionary *result);</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">*  代理</span><br><span class="line">*/</span><br><span class="line">@property(nonatomic,weak) id &lt;YYAInAppPurchaseToolDelegate&gt; delegate;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">*  购买完后是否在iOS端向服务器验证一次,默认为YES</span><br><span class="line">*/</span><br><span class="line">@property(nonatomic)BOOL CheckAfterPay;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">*  单例</span><br><span class="line">*</span><br><span class="line">*  @return YQInAppPurchaseTool</span><br><span class="line">*/</span><br><span class="line">+(YYAInAppPurchaseTool *)defaultTool;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">*  询问苹果的服务器能够销售哪些商品</span><br><span class="line">*</span><br><span class="line">*  @param products 商品ID的数组</span><br><span class="line">*/</span><br><span class="line">- (void)requestProductsWithProductArray:(NSArray *)products;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">*  用户决定购买商品</span><br><span class="line">*</span><br><span class="line">*  @param productID 商品ID</span><br><span class="line">*/</span><br><span class="line">- (void)buyProduct:(NSString *)productID;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">*  恢复商品（仅限永久有效商品）</span><br><span class="line">*/</span><br><span class="line">- (void)restorePurchase;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">NS_ASSUME_NONNULL_END</span><br></pre></td></tr></table></figure></p><p>.m相关代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;YYAInAppPurchaseTool.h&quot;</span><br><span class="line"></span><br><span class="line">#ifdef DEBUG</span><br><span class="line">#define checkURL @&quot;https://sandbox.itunes.apple.com/verifyReceipt&quot;</span><br><span class="line">#else</span><br><span class="line">#define checkURL @&quot;https://buy.itunes.apple.com/verifyReceipt&quot;</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line">@interface YYAInAppPurchaseTool ()&lt;SKPaymentTransactionObserver,SKProductsRequestDelegate&gt;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">*  商品字典</span><br><span class="line">*/</span><br><span class="line">@property(nonatomic,strong)NSMutableDictionary *productDict;</span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">@implementation YYAInAppPurchaseTool</span><br><span class="line"></span><br><span class="line">static YYAInAppPurchaseTool *storeTool;</span><br><span class="line"></span><br><span class="line">/// 单例</span><br><span class="line">+ (YYAInAppPurchaseTool *)defaultTool &#123;</span><br><span class="line">if(!storeTool)&#123;</span><br><span class="line">storeTool = [YYAInAppPurchaseTool new];</span><br><span class="line">[storeTool setup];</span><br><span class="line">&#125;</span><br><span class="line">return storeTool;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#pragma mark  初始化</span><br><span class="line"></span><br><span class="line">- (void)setup &#123;</span><br><span class="line"></span><br><span class="line">self.CheckAfterPay = YES;</span><br><span class="line"></span><br><span class="line">// 设置购买队列的监听器</span><br><span class="line">[[SKPaymentQueue defaultQueue] addTransactionObserver:self];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/// 询问苹果的服务器能够销售哪些商品</span><br><span class="line">- (void)requestProductsWithProductArray:(NSArray *)products &#123;</span><br><span class="line">NSLog(@&quot;开始请求可销售商品&quot;);</span><br><span class="line"></span><br><span class="line">// 能够销售的商品</span><br><span class="line">NSSet *set = [[NSSet alloc] initWithArray:products];</span><br><span class="line"></span><br><span class="line">// &quot;异步&quot;询问苹果能否销售</span><br><span class="line">SKProductsRequest *request = [[SKProductsRequest alloc] initWithProductIdentifiers:set];</span><br><span class="line"></span><br><span class="line">request.delegate = self;</span><br><span class="line"></span><br><span class="line">// 启动请求</span><br><span class="line">[request start];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#pragma mark 获取询问结果，成功采取操作把商品加入可售商品字典里</span><br><span class="line">/**</span><br><span class="line">*  获取询问结果，成功采取操作把商品加入可售商品字典里</span><br><span class="line">*</span><br><span class="line">*  @param request  请求内容</span><br><span class="line">*  @param response 返回的结果</span><br><span class="line">*/</span><br><span class="line">- (void)productsRequest:(SKProductsRequest *)request didReceiveResponse:(SKProductsResponse *)response &#123;</span><br><span class="line">if (self.productDict == nil) &#123;</span><br><span class="line">self.productDict = [NSMutableDictionary dictionaryWithCapacity:response.products.count];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">NSMutableArray *productArray = [NSMutableArray array];</span><br><span class="line"></span><br><span class="line">for (SKProduct *product in response.products) &#123;</span><br><span class="line">//NSLog(@&quot;%@&quot;, product.productIdentifier);</span><br><span class="line"></span><br><span class="line">// 填充商品字典</span><br><span class="line">[self.productDict setObject:product forKey:product.productIdentifier];</span><br><span class="line"></span><br><span class="line">[productArray addObject:product];</span><br><span class="line">&#125;</span><br><span class="line">//通知代理</span><br><span class="line">[self.delegate IAPToolGotProducts:productArray];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#pragma mark - 用户决定购买商品</span><br><span class="line">/**</span><br><span class="line">*  用户决定购买商品</span><br><span class="line">*</span><br><span class="line">*  @param productID 商品ID</span><br><span class="line">*/</span><br><span class="line">- (void)buyProduct:(NSString *)productID &#123;</span><br><span class="line">SKProduct *product = self.productDict[productID];</span><br><span class="line"></span><br><span class="line">// 要购买产品(店员给用户开了个小票)</span><br><span class="line">SKPayment *payment = [SKPayment paymentWithProduct:product];</span><br><span class="line"></span><br><span class="line">// 去收银台排队，准备购买(异步网络)</span><br><span class="line">[[SKPaymentQueue defaultQueue] addPayment:payment];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#pragma mark - SKPaymentTransaction Observer</span><br><span class="line">#pragma mark 购买队列状态变化,,判断购买状态是否成功</span><br><span class="line">/**</span><br><span class="line">*  监测购买队列的变化</span><br><span class="line">*</span><br><span class="line">*  @param queue        队列</span><br><span class="line">*  @param transactions 交易</span><br><span class="line">*/</span><br><span class="line">- (void)paymentQueue:(SKPaymentQueue *)queue updatedTransactions:(NSArray *)transactions &#123;</span><br><span class="line">// 处理结果</span><br><span class="line">for (SKPaymentTransaction *transaction in transactions) &#123;</span><br><span class="line">NSLog(@&quot;队列状态变化 %@&quot;, transaction);</span><br><span class="line">// 如果小票状态是购买完成</span><br><span class="line">if (SKPaymentTransactionStatePurchased == transaction.transactionState) &#123;</span><br><span class="line">//NSLog(@&quot;购买完成 %@&quot;, transaction.payment.productIdentifier);</span><br><span class="line"></span><br><span class="line">if(self.CheckAfterPay)&#123;</span><br><span class="line">//需要向苹果服务器验证一下</span><br><span class="line">//通知代理</span><br><span class="line">[self.delegate IAPToolBeginCheckingdWithProductID:transaction.payment.productIdentifier];</span><br><span class="line">// 验证购买凭据</span><br><span class="line">[self verifyPruchaseWithID:transaction.payment.productIdentifier];</span><br><span class="line">&#125;else&#123;</span><br><span class="line">//不需要向苹果服务器验证</span><br><span class="line">//通知代理</span><br><span class="line">[self.delegate IAPToolBoughtProductSuccessedWithProductID:transaction.payment.productIdentifier</span><br><span class="line">andInfo:nil];</span><br><span class="line">&#125;</span><br><span class="line">// 将交易从交易队列中删除</span><br><span class="line">[[SKPaymentQueue defaultQueue] finishTransaction:transaction];</span><br><span class="line"></span><br><span class="line">&#125; else if (SKPaymentTransactionStateRestored == transaction.transactionState) &#123;</span><br><span class="line">//NSLog(@&quot;恢复成功 :%@&quot;, transaction.payment.productIdentifier);</span><br><span class="line"></span><br><span class="line">// 通知代理</span><br><span class="line">[self.delegate IAPToolRestoredProductID:transaction.payment.productIdentifier];</span><br><span class="line"></span><br><span class="line">// 将交易从交易队列中删除</span><br><span class="line">[[SKPaymentQueue defaultQueue] finishTransaction:transaction];</span><br><span class="line">&#125; else if (SKPaymentTransactionStateFailed == transaction.transactionState)&#123;</span><br><span class="line"></span><br><span class="line">// 将交易从交易队列中删除</span><br><span class="line">[[SKPaymentQueue defaultQueue] finishTransaction:transaction];</span><br><span class="line">//NSLog(@&quot;交易失败&quot;);</span><br><span class="line">[self.delegate IAPToolCanceldWithProductID:transaction.payment.productIdentifier];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;else if(SKPaymentTransactionStatePurchasing == transaction.transactionState)&#123;</span><br><span class="line">NSLog(@&quot;正在购买&quot;);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">NSLog(@&quot;state:%ld&quot;,(long)transaction.transactionState);</span><br><span class="line">NSLog(@&quot;已经购买&quot;);</span><br><span class="line">// 将交易从交易队列中删除</span><br><span class="line">[[SKPaymentQueue defaultQueue] finishTransaction:transaction];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#pragma mark - 恢复商品</span><br><span class="line">/**</span><br><span class="line">*  恢复商品</span><br><span class="line">*/</span><br><span class="line">- (void)restorePurchase &#123;</span><br><span class="line">// 恢复已经完成的所有交易.（仅限永久有效商品）</span><br><span class="line">[[SKPaymentQueue defaultQueue] restoreCompletedTransactions];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#pragma mark 验证购买凭据</span><br><span class="line">/**</span><br><span class="line">*  验证购买凭据</span><br><span class="line">*</span><br><span class="line">*  @param ProductID 商品ID</span><br><span class="line">*/</span><br><span class="line">- (void)verifyPruchaseWithID:(NSString *)ProductID &#123;</span><br><span class="line">// 验证凭据，获取到苹果返回的交易凭据</span><br><span class="line">// appStoreReceiptURL iOS7.0增加的，购买交易完成后，会将凭据存放在该地址</span><br><span class="line">NSURL *receiptURL = [[NSBundle mainBundle] appStoreReceiptURL];</span><br><span class="line">// 从沙盒中获取到购买凭据</span><br><span class="line">NSData *receiptData = [NSData dataWithContentsOfURL:receiptURL];</span><br><span class="line"></span><br><span class="line">// 发送网络POST请求，对购买凭据进行验证</span><br><span class="line">//In the test environment, use https://sandbox.itunes.apple.com/verifyReceipt</span><br><span class="line">//In the real environment, use https://buy.itunes.apple.com/verifyReceipt</span><br><span class="line">// Create a POST request with the receipt data.</span><br><span class="line">NSURL *url = [NSURL URLWithString:checkURL];</span><br><span class="line"></span><br><span class="line">NSLog(@&quot;checkURL:%@&quot;,checkURL);</span><br><span class="line"></span><br><span class="line">// 国内访问苹果服务器比较慢，timeoutInterval需要长一点</span><br><span class="line">NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:url cachePolicy:NSURLRequestUseProtocolCachePolicy timeoutInterval:20.0f];</span><br><span class="line"></span><br><span class="line">request.HTTPMethod = @&quot;POST&quot;;</span><br><span class="line"></span><br><span class="line">// 在网络中传输数据，大多情况下是传输的字符串而不是二进制数据</span><br><span class="line">// 传输的是BASE64编码的字符串</span><br><span class="line">/**</span><br><span class="line">BASE64 常用的编码方案，通常用于数据传输，以及加密算法的基础算法，传输过程中能够保证数据传输的稳定性</span><br><span class="line">BASE64是可以编码和解码的</span><br><span class="line">*/</span><br><span class="line">NSString *encodeStr = [receiptData base64EncodedStringWithOptions:NSDataBase64EncodingEndLineWithLineFeed];</span><br><span class="line"></span><br><span class="line">NSString *payload = [NSString stringWithFormat:@&quot;&#123;\&quot;receipt-data\&quot; : \&quot;%@\&quot;&#125;&quot;, encodeStr];</span><br><span class="line">NSData *payloadData = [payload dataUsingEncoding:NSUTF8StringEncoding];</span><br><span class="line"></span><br><span class="line">request.HTTPBody = payloadData;</span><br><span class="line"></span><br><span class="line">// 提交验证请求，并获得官方的验证JSON结果</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">NSURLSession *session = [NSURLSession sharedSession];</span><br><span class="line"></span><br><span class="line">// 4.根据会话对象，创建一个Task任务</span><br><span class="line"></span><br><span class="line">NSURLSessionDataTask *sessionDataTask = [session dataTaskWithRequest:request completionHandler:^(NSData * _Nullable data, NSURLResponse * _Nullable response, NSError * _Nullable error) &#123;</span><br><span class="line"></span><br><span class="line">NSLog(@&quot;从服务器获取到数据&quot;);</span><br><span class="line"></span><br><span class="line">NSDictionary *dict = [NSJSONSerialization JSONObjectWithData:data options:(NSJSONReadingMutableLeaves) error:nil];</span><br><span class="line"></span><br><span class="line">if (dict != nil) &#123;</span><br><span class="line">// 验证成功,通知代理</span><br><span class="line">// bundle_id&amp;application_version&amp;product_id&amp;transaction_id</span><br><span class="line">[self.delegate IAPToolBoughtProductSuccessedWithProductID:ProductID</span><br><span class="line">andInfo:dict];</span><br><span class="line">&#125; else &#123;</span><br><span class="line"></span><br><span class="line">//验证失败,通知代理</span><br><span class="line">[self.delegate IAPToolCheckFailedWithProductID:ProductID</span><br><span class="line">andInfo:data];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;];</span><br><span class="line"></span><br><span class="line">[sessionDataTask resume];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;将内购相关d功能封装成单例类，直接上代码&quot;&gt;&lt;a href=&quot;#将内购相关d功能封装成单例类，直接上代码&quot; class=&quot;headerlink&quot; title=&quot;将内购相关d功能封装成单例类，直接上代码&quot;&gt;&lt;/a&gt;将内购相关d功能封装成单例类，直接上代码&lt;/h3&gt;&lt;p&gt;.h相关代码如下：&lt;br&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
      <category term="内购" scheme="http://yoursite.com/tags/%E5%86%85%E8%B4%AD/"/>
    
  </entry>
  
  <entry>
    <title>React Native开发环境的搭建（Mac）</title>
    <link href="http://yoursite.com/2019/05/24/React-Native%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA%EF%BC%88Mac%EF%BC%89/"/>
    <id>http://yoursite.com/2019/05/24/React-Native开发环境的搭建（Mac）/</id>
    <published>2019-05-24T06:38:30.000Z</published>
    <updated>2019-05-27T08:16:51.569Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><p>1.先安装Homebrew（若已安装，可跳过）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/</span><br></pre></td></tr></table></figure></p><p>2.安装node和webpack</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew install node</span><br><span class="line">brew install webpack</span><br></pre></td></tr></table></figure><p>测试node和webpack是否安装成功，可用如下命令进行检测。若本地安装，则会显示对应版本号。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">webpack -v</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>3.设置国内镜像（常年开vpn的可以忽略）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set disturl https://npm.taobao.org/dist --global</span><br></pre></td></tr></table></figure></p><p>这里出错了，按提示走就可以，复制sudo那一行更改目录权限，再设置国内镜像。</p><p>4.安装RN：直接输入<code>npm install -g react-native-cli</code>。会因为权限不够而报错：npm WARN checkPermissions Missing write access to /usr/local/lib/node_modules。所以我们直接输入下面两句话<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R $(whoami) /usr/local/*</span><br><span class="line">npm install -g yarn react-native-cli</span><br></pre></td></tr></table></figure></p><p>测试是否安装成功：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">react-native -v</span><br></pre></td></tr></table></figure></p><h2 id="创建RN项目到本地"><a href="#创建RN项目到本地" class="headerlink" title="创建RN项目到本地"></a>创建RN项目到本地</h2><p>1.创建RN项目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">react-native init AwesomeProject</span><br></pre></td></tr></table></figure></p><p>2.编译并运行 React Native 应用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd AwesomeProject</span><br><span class="line">react-native run-ios</span><br></pre></td></tr></table></figure></p><img src="/2019/05/24/React-Native开发环境的搭建（Mac）/screenShots.png" title="运行结果"><blockquote><p>提示：如果 run-ios 无法正常运行，请使用 Xcode 运行来查看具体错误（run-ios 的报错没有任何具体信息）。第一次运行会比较慢，需要耐心等待一下</p></blockquote><p>3.修改项目<br>现在你已经成功运行了项目，我们可以开始尝试动手改一改了：</p><ul><li>使用你喜欢的编辑器打开App.js并随便改上几行。 </li><li>在 iOS 模拟器中按下<em>⌘-R</em>就可以刷新 APP并看到你的最新修改！（如果没有反应，请检查模拟器的 Hardware 菜单中，connect hardware keyboard    选项是否选中开启）</li></ul><h2 id="大功告成"><a href="#大功告成" class="headerlink" title="大功告成"></a>大功告成</h2><img src="/2019/05/24/React-Native开发环境的搭建（Mac）/皮卡丘.gif" title="皮卡皮卡丘">]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装依赖&quot;&gt;&lt;a href=&quot;#安装依赖&quot; class=&quot;headerlink&quot; title=&quot;安装依赖&quot;&gt;&lt;/a&gt;安装依赖&lt;/h2&gt;&lt;p&gt;1.先安装Homebrew（若已安装，可跳过）&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/usr/bin/ruby -e &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;2.安装node和webpack&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;brew install node&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;brew install webpack&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;测试node和webpack是否安装成功，可用如下命令进行检测。若本地安装，则会显示对应版本号。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;node -v&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;webpack -v&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="React Native" scheme="http://yoursite.com/categories/React-Native/"/>
    
    
      <category term="React Native" scheme="http://yoursite.com/tags/React-Native/"/>
    
  </entry>
  
  <entry>
    <title>iOS截图那些事</title>
    <link href="http://yoursite.com/2018/09/06/iOS%E6%88%AA%E5%9B%BE%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    <id>http://yoursite.com/2018/09/06/iOS截图那些事/</id>
    <published>2018-09-06T02:45:04.000Z</published>
    <updated>2018-09-07T06:14:26.925Z</updated>
    
    <content type="html"><![CDATA[<h2 id="普通view截图"><a href="#普通view截图" class="headerlink" title="普通view截图"></a>普通view截图</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">+ (UIImage *)gjj_viewScreenShot:(UIView *)view &#123;</span><br><span class="line">UIGraphicsBeginImageContextWithOptions(CGSizeMake(view.frame.size.width, view.frame.size.height ), NO, 0.0);</span><br><span class="line">[view.layer renderInContext:UIGraphicsGetCurrentContext()];</span><br><span class="line">/// 返回一个基于当前图形上下文的图片</span><br><span class="line">UIImage *viewImage = UIGraphicsGetImageFromCurrentImageContext();</span><br><span class="line"></span><br><span class="line">/// 移除栈顶的基于当前位图的图形上下文</span><br><span class="line">UIGraphicsEndImageContext();</span><br><span class="line">return viewImage;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="tableView、collectionView等scrollView生成长截图"><a href="#tableView、collectionView等scrollView生成长截图" class="headerlink" title="tableView、collectionView等scrollView生成长截图"></a>tableView、collectionView等scrollView生成长截图</h2><p>实现步骤</p><ol><li>保存scrollView截取前的偏移量及Frame</li><li>计算出你要截取的长图的高度及宽度，即scrollView的contentSize，将scrollView.frame设成scrollView.contentSize</li><li>渲染出scrollView整体（上下文），截取当前scrollView生成Image</li><li>恢复scrollView的偏移量及Frame</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">+ (UIImage *)gjj_scrollViewScreenShot:(UIScrollView *)scrollView &#123;</span><br><span class="line">UIImage *image = nil;</span><br><span class="line"></span><br><span class="line">UIGraphicsBeginImageContextWithOptions(scrollView.contentSize, YES, [UIScreen mainScreen].scale);</span><br><span class="line">CGPoint saveContentOffset = scrollView.contentOffset;</span><br><span class="line">CGRect savedFrame = scrollView.frame;</span><br><span class="line">scrollView.contentOffset = CGPointZero;</span><br><span class="line">scrollView.frame = CGRectMake(0, 0, scrollView.contentSize.width, scrollView.contentSize.height);</span><br><span class="line">[scrollView.layer renderInContext:UIGraphicsGetCurrentContext()];</span><br><span class="line">scrollView.layer.contents = nil;</span><br><span class="line">image = UIGraphicsGetImageFromCurrentImageContext();</span><br><span class="line">scrollView.contentOffset = saveContentOffset;</span><br><span class="line">scrollView.frame = savedFrame;</span><br><span class="line">UIGraphicsEndImageContext();</span><br><span class="line">return image;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="webView生成长截图"><a href="#webView生成长截图" class="headerlink" title="webView生成长截图"></a>webView生成长截图</h2><p>webView和scrollView的截图大同小异</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">+ (UIImage *)gjj_webViewScreenShot:(UIWebView *)webView &#123;</span><br><span class="line">UIImage *image = nil;</span><br><span class="line"></span><br><span class="line">UIGraphicsBeginImageContextWithOptions(webView.scrollView.contentSize, YES, [UIScreen mainScreen].scale);</span><br><span class="line">CGPoint saveContentOffset = webView.scrollView.contentOffset;</span><br><span class="line">CGRect savedFrame = webView.frame;</span><br><span class="line">webView.scrollView.contentOffset = CGPointZero;</span><br><span class="line">webView.frame = CGRectMake(0, 0, webView.scrollView.contentSize.width, webView.scrollView.contentSize.height);</span><br><span class="line">[webView.layer renderInContext:UIGraphicsGetCurrentContext()];</span><br><span class="line">webView.layer.contents = nil;</span><br><span class="line">image = UIGraphicsGetImageFromCurrentImageContext();</span><br><span class="line">webView.scrollView.contentOffset = saveContentOffset;</span><br><span class="line">webView.frame = savedFrame;</span><br><span class="line">UIGraphicsEndImageContext();</span><br><span class="line">return image;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="图片拼接"><a href="#图片拼接" class="headerlink" title="图片拼接"></a>图片拼接</h2><p>很多需求是截图附带二维码等进行分享。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">+ (UIImage *)gjj_addHeadImage:(UIImage *)headImage footImage:(UIImage *)footImage toMasterImage:(UIImage *)masterImage &#123;</span><br><span class="line">CGSize size;</span><br><span class="line">size.width = masterImage.size.width;</span><br><span class="line"></span><br><span class="line">CGFloat headProportion = !headImage?0:(headImage.size.width / headImage.size.height);</span><br><span class="line">CGFloat footProportion = !footImage?0:(footImage.size.width / footImage.size.height);</span><br><span class="line"></span><br><span class="line">CGFloat headHeight = !headImage? 0:masterImage.size.width/headProportion;</span><br><span class="line">CGFloat footHeight = !footImage? 0:footImage.size.width/footProportion;</span><br><span class="line"></span><br><span class="line">size.height = masterImage.size.height + headHeight + footHeight;</span><br><span class="line"></span><br><span class="line">UIGraphicsBeginImageContextWithOptions(size, YES, 0.0);</span><br><span class="line"></span><br><span class="line">if (headImage) &#123;</span><br><span class="line">[headImage drawInRect:CGRectMake(0, 0, masterImage.size.width, headHeight)];</span><br><span class="line">&#125;</span><br><span class="line">[masterImage drawInRect:CGRectMake(0, headHeight, masterImage.size.width, masterImage.size.height)];</span><br><span class="line">if (footImage) &#123;</span><br><span class="line">[footImage drawInRect:CGRectMake(0, masterImage.size.height + headHeight, masterImage.size.width, footHeight)];</span><br><span class="line">&#125;</span><br><span class="line">UIImage *resultImage = UIGraphicsGetImageFromCurrentImageContext(); UIGraphicsEndImageContext();</span><br><span class="line">return resultImage;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="添加水印"><a href="#添加水印" class="headerlink" title="添加水印"></a>添加水印</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">+ (UIImage *)gjj_addWaterImage:(UIImage *)waterImage toMasterImage:(UIImage *)masterImage waterImageRect:(CGRect)rect &#123;</span><br><span class="line">UIGraphicsBeginImageContextWithOptions(masterImage.size, NO, 0);</span><br><span class="line">[masterImage drawInRect:CGRectMake(0, 0, masterImage.size.width, masterImage.size.height)];</span><br><span class="line">/// 绘制水印图片到当前上下文</span><br><span class="line">[waterImage drawInRect:rect];</span><br><span class="line"></span><br><span class="line">UIImage * newImage = UIGraphicsGetImageFromCurrentImageContext();</span><br><span class="line">UIGraphicsEndImageContext();</span><br><span class="line">return newImage;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;普通view截图&quot;&gt;&lt;a href=&quot;#普通view截图&quot; class=&quot;headerlink&quot; title=&quot;普通view截图&quot;&gt;&lt;/a&gt;普通view截图&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;+ (UIImage *)gjj_viewScreenShot:(UIView *)view &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UIGraphicsBeginImageContextWithOptions(CGSizeMake(view.frame.size.width, view.frame.size.height ), NO, 0.0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[view.layer renderInContext:UIGraphicsGetCurrentContext()];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// 返回一个基于当前图形上下文的图片&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UIImage *viewImage = UIGraphicsGetImageFromCurrentImageContext();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// 移除栈顶的基于当前位图的图形上下文&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UIGraphicsEndImageContext();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;return viewImage;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="C" scheme="http://yoursite.com/categories/C/"/>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
      <category term="截图" scheme="http://yoursite.com/tags/%E6%88%AA%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>【C实现】给出一个字符串，要求将其按照单词顺序进行反转 </title>
    <link href="http://yoursite.com/2018/08/21/%E3%80%90C%E5%AE%9E%E7%8E%B0%E3%80%91%E7%BB%99%E5%87%BA%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%8C%E8%A6%81%E6%B1%82%E5%B0%86%E5%85%B6%E6%8C%89%E7%85%A7%E5%8D%95%E8%AF%8D%E9%A1%BA%E5%BA%8F%E8%BF%9B%E8%A1%8C%E5%8F%8D%E8%BD%AC/"/>
    <id>http://yoursite.com/2018/08/21/【C实现】给出一个字符串，要求将其按照单词顺序进行反转/</id>
    <published>2018-08-21T02:35:59.000Z</published>
    <updated>2018-09-07T06:13:51.251Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目：给出一个字符串，要求将其按照单词顺序进行反转，比如如果是”the-sky-is-blue”-那么反转之后的结果就是”blue-is-sky-the”。"><a href="#题目：给出一个字符串，要求将其按照单词顺序进行反转，比如如果是”the-sky-is-blue”-那么反转之后的结果就是”blue-is-sky-the”。" class="headerlink" title="题目：给出一个字符串，要求将其按照单词顺序进行反转，比如如果是”the sky is blue”,那么反转之后的结果就是”blue is sky the”。"></a>题目：给出一个字符串，要求将其按照单词顺序进行反转，比如如果是”the sky is blue”,那么反转之后的结果就是”blue is sky the”。</h2><p>问题分析：</p><ul><li>每个单词长度不一致</li><li>空格需要特殊处理</li></ul><a id="more"></a><p>使用C语言实现：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">void swap (char chars[], int p, int q);</span><br><span class="line">void reverse (char chars[], int start, int end);</span><br><span class="line">void reverseWords(char strings[]);</span><br><span class="line"></span><br><span class="line">int main(int argc, const char * argv[]) &#123;</span><br><span class="line">@autoreleasepool &#123;</span><br><span class="line">char string[] = &quot;the sky is blue&quot;;</span><br><span class="line">reverseWords(string);</span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void swap (char chars[], int p, int q) &#123;</span><br><span class="line">char temp = chars[p];</span><br><span class="line">chars[p] = chars[q];</span><br><span class="line">chars[q] = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void reverse (char chars[], int start, int end) &#123;</span><br><span class="line">NSLog(@&quot;%s&quot;,chars);</span><br><span class="line">int s = start;</span><br><span class="line">int e = end;</span><br><span class="line"></span><br><span class="line">while (s &lt; e) &#123;</span><br><span class="line">swap(chars, s, e);</span><br><span class="line">s += 1;</span><br><span class="line">e -= 1;</span><br><span class="line">&#125;</span><br><span class="line">NSLog(@&quot;%s&quot;,chars);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void reverseWords(char strings[]) &#123;</span><br><span class="line">if ((int)strlen(strings) == 0) &#123;</span><br><span class="line">return;</span><br><span class="line">&#125;</span><br><span class="line">int start = 0, len = (int)strlen(strings);</span><br><span class="line">reverse(strings, 0, len - 1);</span><br><span class="line">for (int i = 0 ; i &lt; len; i++) &#123;</span><br><span class="line">if ((i == len - 1) || (strings[i + 1] == &apos; &apos;)) &#123;</span><br><span class="line">reverse(strings, start, i);</span><br><span class="line">start = i + 2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">NSLog(@&quot;%s&quot;,strings);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>控制台打印：<code>2018-08-14 16:04:22.815076+0800 算法[6268:668783] blue is sky the</code></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目：给出一个字符串，要求将其按照单词顺序进行反转，比如如果是”the-sky-is-blue”-那么反转之后的结果就是”blue-is-sky-the”。&quot;&gt;&lt;a href=&quot;#题目：给出一个字符串，要求将其按照单词顺序进行反转，比如如果是”the-sky-is-blue”-那么反转之后的结果就是”blue-is-sky-the”。&quot; class=&quot;headerlink&quot; title=&quot;题目：给出一个字符串，要求将其按照单词顺序进行反转，比如如果是”the sky is blue”,那么反转之后的结果就是”blue is sky the”。&quot;&gt;&lt;/a&gt;题目：给出一个字符串，要求将其按照单词顺序进行反转，比如如果是”the sky is blue”,那么反转之后的结果就是”blue is sky the”。&lt;/h2&gt;&lt;p&gt;问题分析：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每个单词长度不一致&lt;/li&gt;
&lt;li&gt;空格需要特殊处理&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="C" scheme="http://yoursite.com/categories/C/"/>
    
    
      <category term="C语言" scheme="http://yoursite.com/tags/C%E8%AF%AD%E8%A8%80/"/>
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>QLPreviewController</title>
    <link href="http://yoursite.com/2018/05/14/hello-world/"/>
    <id>http://yoursite.com/2018/05/14/hello-world/</id>
    <published>2018-05-14T13:53:54.000Z</published>
    <updated>2018-09-07T06:14:07.776Z</updated>
    
    <content type="html"><![CDATA[<p>QLPreviewController在iOS中用于方便预览文件，它支持的文件有：</p><ul><li>iWork文档</li><li>微软Office97以上版本的文档</li><li>RTF文档</li><li>PDF文件</li><li>图片文件</li><li><p>文本文件和CSV文件</p><p>使用的时候首先要引用<code>#import &lt;QuickLook/QuickLook.h&gt;</code>。</p><a id="more"></a><p>初始化：</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">_qlPreviewController = [[ QLPreviewController alloc]init];</span><br><span class="line"> _qlPreviewController.dataSource = self;</span><br><span class="line"> _qlPreviewController.delegate = self;</span><br><span class="line"> </span><br><span class="line"> [self presentViewController:_qlPreviewController animated:YES completion:nil];</span><br></pre></td></tr></table></figure><p> QLPreviewController类似于Tableview的使用方法，也是首先遵循代理和数据源代理。然后实现代理方法，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-(NSInteger)numberOfPreviewItemsInPreviewController:(QLPreviewController *)controller&#123;</span><br><span class="line">    return 2;</span><br><span class="line">&#125;</span><br><span class="line">-(id&lt;QLPreviewItem&gt;)previewController:(QLPreviewController *)controller previewItemAtIndex:(NSInteger)index&#123;</span><br><span class="line">    NSString *path = [[NSBundle mainBundle] pathForResource:@&quot;aa&quot; ofType:@&quot;doc&quot;];</span><br><span class="line">    NSURL *myDoucment = [NSURL fileURLWithPath:path];</span><br><span class="line">    return myDoucment;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;QLPreviewController在iOS中用于方便预览文件，它支持的文件有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;iWork文档&lt;/li&gt;
&lt;li&gt;微软Office97以上版本的文档&lt;/li&gt;
&lt;li&gt;RTF文档&lt;/li&gt;
&lt;li&gt;PDF文件&lt;/li&gt;
&lt;li&gt;图片文件&lt;/li&gt;
&lt;li&gt;&lt;p&gt;文本文件和CSV文件&lt;/p&gt;
&lt;p&gt;使用的时候首先要引用&lt;code&gt;#import &amp;lt;QuickLook/QuickLook.h&amp;gt;&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="Object-C" scheme="http://yoursite.com/categories/Object-C/"/>
    
    
  </entry>
  
</feed>
